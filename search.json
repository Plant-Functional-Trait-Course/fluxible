[{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"checklists-for-inputs","dir":"Articles","previous_headings":"","what":"Checklists for inputs","title":"Preparing the data for fluxible","text":"first function use processing ecosystem gas fluxes data Fluxible flux_match, requires two inputs: row_conc field_record. columns files require specific names, kept entire workflow. however advise names contain spaces special characters.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"input-raw_conc","dir":"Articles","previous_headings":"Checklists for inputs","what":"Input raw_conc","title":"Preparing the data for fluxible","text":"input raw_conc file gas concentration measured time, typically file exported logger instrument, needs fulfill following criteria: column gas concentration numeric values column datetime format (yyyy-mm-dd hh:mm:ss) corresponding data point gas concentration","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"input-field_record","dir":"Articles","previous_headings":"Checklists for inputs","what":"Input field_record","title":"Preparing the data for fluxible","text":"input field_record metadata file contains information sample plot measured. can also provide meta data, campaign, site, type measurement, etc. file contain: column indicating start measurement datetime format (yyyy-mm-dd hh:mm:ss) length measurements constant: column containing end measurement datetime format (yyyy-mm-dd hh:mm:ss)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"by-passing-flux_match","dir":"Articles","previous_headings":"Checklists for inputs","what":"By-passing flux_match","title":"Preparing the data for fluxible","text":"flux_match function intends attribute unique flux_id measurement slice recordings measurements. Depending setup, step might necessary. flux_fitting function step flux_match input check following points: gas concentration column numeric column datetime format (yyyy-mm-dd hh:mm:ss) corresponding gas concentration data points column unique ID measurement column indicating start measurement datetime format (yyyy-mm-dd hh:mm:ss) column indicating end measurement datetime format (yyyy-mm-dd hh:mm:ss)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"defining-your-dataset","dir":"Articles","previous_headings":"Checklists for inputs","what":"Defining your dataset","title":"Preparing the data for fluxible","text":"Fluxible treats entire dataset homogeneously terms choice model fit data quality control. every step process risk adding bias final data (example, linear fit tends estimate fluxes exponential one tends estimate fluxes). treating data homogeneously, bias consistent therefore affect analysis less.  Measurements done similar conditions equipment ideally processed together. Note “flux flux” approach, treating measurement individually terms fit, cut quality control, also possible (Fluxible optimised !). require looping flux_fitting flux_quality (optionally flux_plot visualization) functions flux ID prompt asking arguments.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"importing-a-single-file","dir":"Articles","previous_headings":"","what":"Importing a single file","title":"Preparing the data for fluxible","text":"example import file 26124054001.#00, text file extracted Squirrel Data Logger 2010 Series (Grant Instruments) SquirrelView software. first thing importing file read_delim open file text editor look structure. read file read_delim, use rename mutate (dplyr package ; Wickham et al., 2023) transform columns want, dmy_hms lubridate package (Grolemund Wickham, 2011) get datetime column right format: raw_conc structure: bad… quite yet: column names contain space columns needed, removing make things easier later : Type (nothing type measurement, something logger), CO2 (V), H2O (V) (two voltage input logger, needed), H2O_calc (ppt) (one calibrated campaign better remove avoid confusion) Date Time columns united one transformed yyyy-mm-dd hh:mm:ss format Et voilà:","code":"library(tidyverse) # readr, dplyr and lubridate are part of tidyverse  raw_conc <- read_delim(   \"ex_data/26124054001.#00\",   delim = \",\", # our file is comma separated   skip = 25 # the first 25 rows are logger infos that we do not want to keep ) #> spc_tbl_ [17 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ Date          : chr [1:17] \"26.06.2020\" \"26.06.2020\" \"26.06.2020\".. #>  $ Time          : 'hms' num [1:17] 12:40:56 12:40:57 12:40:58 12:40.. #>  $ Type          : chr [1:17] \"Interval\" \"Interval\" \"Interval\" \"Int\".. #>  $ CO2 (V)       : num [1:17] 2.08 2.09 2.08 2.08 2.06 ... #>  $ H2O (V)       : num [1:17] 4e-04 4e-04 4e-04 4e-04 4e-04 4e-04 4e.. #>  $ CO2_calc (ppm): num [1:17] 416 418 416 416 412 ... #>  $ H2O_calc (ppt): num [1:17] 0.007 0.008 0.007 0.008 0.008 0.007 0... raw_conc <- raw_conc |>   rename(     co2_conc = \"CO2_calc (ppm)\"   ) |>   mutate(     datetime = paste0(Date, Time), # we paste date and time together     datetime = dmy_hms(datetime) # datetime instead of character   ) |>   select(datetime, co2_conc) #> tibble [17 × 2] (S3: tbl_df/tbl/data.frame) #>  $ datetime: POSIXct[1:17], format: \"2020-06-26 12:40:56\" ... #>  $ co2_conc: num [1:17] 416 418 416 416 412 ..."},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"importing-multiple-files","dir":"Articles","previous_headings":"","what":"Importing multiple files","title":"Preparing the data for fluxible","text":"Quite often field season result several files. example read files “ex_data/” contain “CO2” names.","code":"library(tidyverse)  raw_conc <- list.files( # list the files   \"ex_data\", # at location \"ex_data\"   full.names = TRUE,   pattern = \"*CO2*\" # that contains \"CO2\" in their name ) |>   map_dfr(     read_csv, # we map read_csv on all the files     na = c(\"#N/A\", \"Over\") # \"#N/A\" and Over should be treated as NA   ) |>   rename(     conc = \"CO2 (ppm)\"   ) |>   mutate(     datetime = dmy_hms(`Date/Time`)   ) |>   select(datetime, conc)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"the-one-file-per-flux-approach","dir":"Articles","previous_headings":"","what":"The one file per flux approach","title":"Preparing the data for fluxible","text":"Fluxible designed process data measured continuously (single several files) field_record records measured . Another strategy measuring gas fluxes field create new file measurement, file name flux ID. approach similar reading multiple files, except add column file name, can -pass flux_match. raw_conc structure:","code":"library(tidyverse)  raw_conc <- list.files( #listing all the files   \"ex_data/field_campaign\", # at location \"ex_data/field_campaign\"   full.names = TRUE ) |>   map_dfr( # we map read_tsv on all the files     # read_tsv is the version of read_delim for tab separated value files     read_tsv,     skip = 3,     # creates a column with the filename, that we can use as flux ID     id = \"filename\"   ) |>   rename( # a bit of renaming to make the columns more practical     co2_conc = \"CO2 (umol/mol)\",     h2o_conc = \"H2O (mmol/mol)\",     air_temp = \"Temperature (C)\",     pressure = \"Pressure (kPa)\"   ) |>   mutate(     datetime = paste(Date, Time),     # we get rid of the milliseconds     datetime = as.POSIXct(datetime, format=\"%Y-%m-%d %H:%M:%OS\"),     pressure = pressure / 101.325, # conversion from kPa to atm     filename = basename(filename) # removing folder names   ) |>   select(datetime, co2_conc, h2o_conc, air_temp, pressure, filename) #> tibble [18 × 6] (S3: tbl_df/tbl/data.frame) #>  $ datetime: POSIXct[1:18], format: \"2023-12-14 10:57:01\" ... #>  $ co2_conc: num [1:18] 416 407 404 421 411 ... #>  $ h2o_conc: num [1:18] 22.7 22.5 23 22.6 22.8 ... #>  $ air_temp: num [1:18] 22.4 22.4 22.4 22.3 22.3 ... #>  $ pressure: num [1:18] 0.79 0.791 0.79 0.79 0.791 ... #>  $ filename: chr [1:18] \"1_2000_east_1_day_a-2023-12-14T105700.txt\"\".."},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/data-prep.html","id":"the-tricky-one","dir":"Articles","previous_headings":"","what":"The tricky one","title":"Preparing the data for fluxible","text":"happens extract logger file csv using computer settings using comma decimal point (quite standard Europe)? Well, get comma separated values (csv) file, decimals separated … comma. Ideally file extracted European csv, means comma decimals semi-colon column separator. . Let’s try usual way first: took column names right, course interpreted comma separators, made mess. Let’s see can skipped header assemble columns left right side decimal point: problem now CO2 concentration measured every second (comma!), variable measured every 10 seconds. means every 10th row 14 comma separated elements, others 10. Uhhhhhhhhh point, might want get field computer re extract raw file European csv output, anything comma separated, set decimal point … point. sake , let’s pretend option solve issue R: Et voilà: strange mix tidyverse base R, definitely try plots check data making sense (number around 420 likely CO2 concentration, 5 20 probably temperature, soil temperature lower air temperature). worked…","code":"library(tidyverse)  raw_conc <- read_csv( # read_csv is the same as read_delim(delim = \",\")   \"ex_data/011023001.#01\",   col_types = \"Tcdddddd\",   na = \"#N/A\" # we tell read_csv what NA look like in that file ) #> spc_tbl_ [101 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ Date/Time     : POSIXct[1:101], format: NA ... #>  $ Type          : chr [1:101] \"Interval\" \"Interval\" \"Interval\" \"In\".. #>  $ CO2_input (V) : num [1:101] 2 2 2 2 2 2 2 2 2 2 ... #>  $ PAR_input (mV): num [1:101] 28 28 28 35 31 23 58 35 7 3 ... #>  $ Temp_air ('C) : num [1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ Temp_soil ('C): num [1:101] 80663 NA NA NA NA ... #>  $ CO2 (ppm)     : num [1:101] 12 NA NA NA NA NA NA NA NA NA ... #>  $ PAR (umolsm2) : num [1:101] NA NA NA NA NA NA NA NA NA NA ... raw_conc <- read_csv(   \"ex_data/011023001.#01\",   skip = 1, # this time we skip the row with the column names   col_names = FALSE, # we tell read_csv that column names are not provided   na = \"#N/A\" # we tell read_csv what NA looks like in that file ) #> spc_tbl_ [101 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ X1 : chr [1:101] \"01.10.2023 11:23:40\" \"01.10.2023 11:23:41\" \"01\".. #>  $ X2 : chr [1:101] \"Interval\" \"Interval\" \"Interval\" \"Interval\" ... #>  $ X3 : num [1:101] 2 2 2 2 2 2 2 2 2 2 ... #>  $ X4 : chr [1:101] \"0028\" \"0028\" \"0028\" \"0035\" ... #>  $ X5 : num [1:101] 0 NA NA NA NA NA NA NA NA NA ... #>  $ X6 : chr [1:101] \"080663\" NA NA NA ... #>  $ X7 : num [1:101] 12 NA NA NA NA NA NA NA NA NA ... #>  $ X8 : chr [1:101] \"00\" \"400\" \"400\" \"400\" ... #>  $ X9 : chr [1:101] \"10\" \"56\" \"55\" \"70\" ... #>  $ X10: num [1:101] 81 NA NA NA NA NA NA NA NA NA ... #>  $ X11: num [1:101] 400 NA NA NA NA NA NA NA NA NA ... #>  $ X12: chr [1:101] \"55\" \"\" \"\" \"\" ... #>  $ X13: num [1:101] 20 NA NA NA NA NA NA NA NA NA ... #>  $ X14: chr [1:101] \"60\" \"\" \"\" \"\" ... # we read each row of our file as an element of a list lines <- readLines(\"ex_data/011023001.#01\") lines <- lines[-1] # removing the first element with the column names  # we first deal with the elements where we have those environmental data # that were measured every 10 seconds linesenv <- lines[seq(1, length(lines), 10)] env_df <- read.csv(   textConnection(linesenv), # we read the list into a csv   header = FALSE, # there is no header   colClasses = rep(\"character\", 14)   # specifying that those columns are character is important   # if read as integer, 06 becomes 6, and when putting columns together,   # 400.06 will be read as 400.6, which is wrong )  env_df <- env_df |>   mutate(     datetime = dmy_hms(V1),     temp_air = paste(       V7, # V7 contains the left side of the decimal point       V8, # V8 the right side       sep = \".\" # this time we put it in american format     ),     temp_air = as.double(temp_air), # now we can make it a double     temp_soil = as.double(paste(V9, V10, sep = \".\")),     co2_conc = as.double(paste(V11, V12, sep = \".\")),     PAR = as.double(paste(V13, V14, sep = \".\"))   ) |>   select(datetime, temp_air, temp_soil, co2_conc, PAR)  # now we do the same with the other elements of the list lines_other <- lines[-seq(1, length(lines), 10)] other_df <- read.csv(   textConnection(lines_other),   header = FALSE,   colClasses = rep(\"character\", 10) )  other_df <- other_df  |>   mutate(     datetime = dmy_hms(V1),     co2_conc = as.double(paste(V8, V9, sep = \".\"))   ) |>   select(datetime, co2_conc)  # and finally we do a full join with both conc_df <- bind_rows(env_df, other_df) |>   arrange(datetime) # I like my dataframes in chronological order #> 'data.frame':    101 obs. of  5 variables: #>  $ datetime : POSIXct, format: \"2023-10-01 11:23:40\" ... #>  $ temp_air : num  12 NA NA NA NA NA NA NA NA NA ... #>  $ temp_soil: num  10.8 NA NA NA NA ... #>  $ co2_conc : num  401 401 401 401 401 ... #>  $ PAR      : num  20.6 NA NA NA NA NA NA NA NA NA ..."},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"CO2 concentration data well air soil temperature PAR recorded dataframe named co2_liahovden. metadata measurement dataframe named record_liahovden. dataframe contains starting time measurement, measurement type (NEE ER) unique plot ID (called turfs experiment). Structure CO2 concentration data (co2_liahovden): Structure meta data (record_liahovden):","code":"#> tibble [89,692 × 5] (S3: tbl_df/tbl/data.frame) #>  $ datetime : POSIXct[1:89692], format: \"2022-07-27 05:34:49\" ... #>  $ temp_air : num [1:89692] 3 NA NA NA NA NA NA NA NA NA ... #>  $ temp_soil: num [1:89692] 2.96 NA NA NA NA NA NA NA NA NA ... #>  $ conc     : num [1:89692] 468 469 468 468 468 ... #>  $ PAR      : num [1:89692] 2.59 NA NA NA NA NA NA NA NA NA ... #> tibble [138 × 4] (S3: tbl_df/tbl/data.frame) #>  $ turfID: chr [1:138] \"4 AN1C 4\" \"4 AN1C 4\" \"27 AN3C 27\" \"27 AN3C \".. #>  $ type  : chr [1:138] \"NEE\" \"ER\" \"NEE\" \"ER\" ... #>  $ round : num [1:138] 1 1 1 1 1 1 2 2 2 2 ... #>  $ start : POSIXct[1:138], format: \"2022-07-27 05:37:30\" ..."},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"attributing-meta-data","dir":"Articles","previous_headings":"","what":"Attributing meta-data","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"use flux_match function slice measurement CO2 concentration data discard recordings . two inputs raw_conc, dataframe containing field measured raw gas concentration, field_record, meta data dataframe start measurement. f_datetime column containing date time gas concentration dataframe, start_col column containing start date time measurement meta data dataframe.  length measurements provided measurement_length (seconds). Alternatively, column indicating end time date measurement can provided end_col, fixed_length = FALSE. time_diff argument allow account consistant time difference (seconds) two inputs. value added datetime column gas concentration dataset.","code":"library(fluxible)  conc_liahovden <- flux_match(   raw_conc = co2_liahovden, # dataframe with raw gas concentration   field_record = record_liahovden, # dataframe with meta data   f_datetime = datetime, # column containing date and time   start_col = start, # start date and time of each measurement   measurement_length = 220, # length of measurements (in seconds)   time_diff = 0 # time difference between f_datetime and start_col )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"fit model obtain slope t0t_0, needed flux calculation, flux_fitting function.   example use exp_zhao18 model (Zhao et al., 2018). exp_zhao18 mix exponential linear model - thus fitting fluxes independantly curvature - includes t0t_0 fitting parameter (implementation described vignette(\"zhao18\", package = \"fluxible\")). similar model option manually set t0t_0 exp_tz. available models : linear linear fit, quadratic quadratic fit, exp_hm original HM model (Hutchinson Mosier, 1981). conc_df argument dataframe gas concentration, date time, start end measurement, ideally produced flux_match (see vignette(\"data-prep\", package = \"fluxible\") requirements bypass flux_match). f_conc f_datetime , similarly flux_match, gas concentration corresponding datetime column. arguments f_start, f_end, f_fluxid produced flux_match. indicate, respectively, start, end unique ID measurement. model chosen fit gas concentration provided fit_type. user can decide restrict focus window fitting model start_cut end_cut arguments. models quadratic, exp_tz, exp_hm, t_zero needs provided indicate many seconds start focus window slope calculated. Arguments cz_window, b_window, a_window roll_width specific automatic fitting exp_zhao18 exp_tz models described vignette(\"zhao18\", package = \"fluxible\"). recommend keeping default values.","code":"slopes_liahovden <- flux_fitting(   conc_df = conc_liahovden, # the output of flux_match   f_conc = conc, # gas concentration column   f_datetime = datetime, # date and time column   f_start = f_start, # start of each measurement, provided by flux_match   f_end = f_end, # end of each measurement, provided by flux_match   f_fluxid = f_fluxid, # unique ID for each measurement, provided by flux_match   fit_type = \"exp_zhao18\", # the model to fit to the gas concentration   start_cut = 0, # seconds to prune at the start before fitting   end_cut = 0 # seconds to prune at the end of all measurements before fitting )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"quality-checks-and-visualizations","dir":"Articles","previous_headings":"","what":"Quality checks and visualizations","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"function flux_quality used provide diagnostics quality fit, potentially advising discard measurements replace zero.  main principle user sets thresholds diagnostics (depending model used) flag measurements according quality data model fit. quality flags used provide f_slope_corr, column containing advised slope use calculation. force_ arguments allow user override automatic flagging providing vector fluxIDs. ambient_conc error arguments used detect measurements starting outside reasonable range (mean three first gas concentration data points used, independantly focus window). minimal detectable slope calculated 2×instr errorlength measurement\\frac{2 \\times \\text{instr error}}{\\text{length measurement}} used detect slopes replaced zero. arguments described function documentation (displayed ?flux_quality). function flux_flag_count provides table counts quality flags, convenient reporting dataset quality, can also done final flux dataset. table also printed side effect flux_quality.  function flux_plot provides plots visual assessment measurements, explicitly displaying quality flags flux_quality cuts flux_fitting. Note different values default can provided scale_x_datetime facet_wrap providing lists arguments scale_x_datetime_args facet_wrap_args respectively. Output flux_plot fluxid 54, 95, 100 101. plots can directly exported without printing R session, recommend large datasets. output = \"pdfpages\", plots exported multipage pdf file (A4 landscape). uses ggforce::facet_wrap_paginate, quite slow. output = \"longpdf\", plots exported single pdf file (defautl width 29.7 cm long needed). allow printing aesthetically discutable, much faster. argument f_plotname left empty (default), name slopes_df object used (flags_liahovden case). pdf file saved folder named f_quality_plots. Based quality flags plots, user can decide run flux_fitting /flux_quality different parameters. cut last 60 seconds fluxes (cutting last third). also detected flux look correct. Sometimes measurements pass automated quality control user might reasons still discard (opposite). force_discard, force_ok, force_lm force_zero arguments .   example, measurement fluxID 101, exponential model providing good fit (resulting flux discarded) due noise start measurement. take decision force use linear model instead, seems fit much better (given flux looks quite flat, also force zero). achieved force_lm = 101. Several fluxIDs can provided force_ arguments providing vector: force_zero = c(100, 101). function flux_fitting run , end cut 60 seconds: flux_quality , forcing use linear model fluxID 101: finally flux_plot check output: Output flux_plot fluxid 54, 95, 100 101 refitting 60 seconds end cut.","code":"flags_liahovden <- flux_quality(   slopes_df = slopes_liahovden,   f_conc = conc,   # force_discard = c(),   # force_ok = c(),   # force_zero = c(),   # force_lm = c(),   # force_exp = c(),   ambient_conc = 421,   error = 100,   instr_error = 5 ) #>  #>  Total number of measurements: 138 #>  #>  ok   109     79 % #>  zero     27      20 % #>  discard      2   1 % #>  force_discard    0   0 % #>  start_error      0   0 % #>  no_data      0   0 % #>  force_ok     0   0 % #>  force_zero   0   0 % #>  force_lm     0   0 % #>  no_slope     0   0 %  flux_flag_count(flags_liahovden) #> # A tibble: 10 × 3 #>    f_quality_flag     n  ratio #>    <fct>          <int>  <dbl> #>  1 ok               109 0.790  #>  2 zero              27 0.196  #>  3 discard            2 0.0145 #>  4 force_discard      0 0      #>  5 start_error        0 0      #>  6 no_data            0 0      #>  7 force_ok           0 0      #>  8 force_zero         0 0      #>  9 force_lm           0 0      #> 10 no_slope           0 0 flags_liahovden |>   # we show only a sample of the plots in this example   dplyr::filter(f_fluxid %in% c(54, 95, 100, 101)) |>   flux_plot(     f_conc = conc,     f_datetime = datetime,     f_ylim_upper = 600, # upper limit of y-axis     f_ylim_lower = 350, # lower limit of x-axis     y_text_position = 450, # position of text with flags and diagnostics     facet_wrap_args = list( # facet_wrap arguments, if different than default       nrow = 2,       ncol = 2,       scales = \"free\"     )   ) flux_plot(   slopes_df = flags_liahovden,   f_conc = conc,   f_datetime = datetime,   print_plot = FALSE, # not printing the plots in the R session   output = \"pdfpages\", # the type of output   f_plotname = \"plots_liahovden\" # filename for the pdf file ) flux_plot(   slopes_df = flags_liahovden,   f_conc = conc,   f_datetime = datetime,   print_plot = FALSE, # not printing the plots in the R session   output = \"longpdf\", # the type of output   f_plotname = \"plots_liahovden\" # filename for the pdf file ) fits_liahovden_60 <- conc_liahovden |>   flux_fitting(     conc,     datetime,     fit_type = \"exp_zhao18\",     end_cut = 60 # we decided to cut the last 60 seconds of the measurements   ) flags_liahovden_60 <- fits_liahovden_60 |>   flux_quality(     conc,     force_lm = 101 # we force the use of the linear model for fluxid 101   ) #>  #>  Total number of measurements: 138 #>  #>  ok   127     92 % #>  zero     8   6 % #>  discard      2   1 % #>  force_lm     1   1 % #>  force_discard    0   0 % #>  start_error      0   0 % #>  no_data      0   0 % #>  force_ok     0   0 % #>  force_zero   0   0 % #>  no_slope     0   0 % flags_liahovden_60 |>   dplyr::filter(f_fluxid %in% c(54, 95, 100, 101)) |>   flux_plot(     conc,     datetime,     f_ylim_upper = 600,     f_ylim_lower = 350,     y_text_position = 450,     facet_wrap_args = list(       nrow = 2,       ncol = 2,       scales = \"free\"     )   )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"flux-calculation","dir":"Articles","previous_headings":"","what":"Flux calculation","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"Now satisfied fit, can calculate fluxes flux_calc, applies following equation: flux=C′(t0)×P×VR×T×\\text{flux}=C'(t_0)\\times \\frac{P\\times V}{R\\times T\\times } flux: flux gas surface plot (mmol m-2 h-1) slope: slope estimate (ppm s-1) P: pressure (atm) V: volume chamber tubing (L) R: gas constant (0.082057 L atm K-1 mol-1) T: chamber air temperature (K) : area chamber frame base (m2) calculation using slope, can either f_slope (provided flux_fitting quality checked) f_slope_corr recommended slope quality check flux_quality. volume defined constant measurements also possible provide volume separate column (setup_volume). cols_ave arguments indicates column(s), .e. environmental data, averaged flux. setting argument cut = TRUE (default), cut applied flux_fitting used.  cols_sum cols_med sum median respectively. output, columns get appended suffixes _ave, _sum _med respectively. recorded PAR soil temperature dataset like average measurement. cols_keep arguments indicates columns kept. flux_calc transforms dataframe one row per datapoint gas concentration one row per flux, values columns specified cols_keep constant within measurement (, rows repeated accomodate non constant values). columns can nested column called nested_variables cols_nest (cols_nest = \"\" nest columns present dataset, except provided cols_keep). units gas concentration, conc_unit, can ppm ppb. units calculated flux can mmol/m2/hmmol/m^2/h (flux_unit = \"mmol\") μmol/m2/h\\mu mol/m^2/h (flux_unit = \"micromol\"). Temperature input can Celsius, Kelvin Fahrenheit, returned unit output.","code":"fluxes_liahovden_60 <- flux_calc(   slopes_df = flags_liahovden_60,   slope_col = f_slope_corr, # we use the slopes provided by flux_quality   f_datetime = datetime,   temp_air_col = temp_air,   conc_unit = \"ppm\", # unit of gas concentration   flux_unit = \"mmol/m2/h\", # unit of flux   temp_air_unit = \"celsius\",   setup_volume = 24.575, # in liters, can also be a variable   atm_pressure = 1, # in atm, can also be a variable   plot_area = 0.0625, # in m2, can also be a variable   cols_keep = c(\"turfID\", \"type\"),   cols_ave = c(\"temp_soil\", \"PAR\") ) #> tibble [138 × 10] (S3: tbl_df/tbl/data.frame) #>  $ f_fluxid      : Factor w/ 138 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 .. #>  $ temp_soil_ave : num [1:138] 6.96 7.01 6.83 6.83 2.5 ... #>  $ PAR_ave       : num [1:138] 24.242 1.05 28.809 0.403 48.062 ... #>  $ turfID        : chr [1:138] \"4 AN1C 4\" \"4 AN1C 4\" \"27 AN3C 27\" \"\".. #>  $ type          : chr [1:138] \"NEE\" \"ER\" \"NEE\" \"ER\" ... #>  $ f_slope_corr  : num [1:138] -0.2258 0.0718 -0.3718 0.2433 -0.2865.. #>  $ f_temp_air_ave: num [1:138] 3.21 3.3 3.15 2.96 2.81 ... #>  $ datetime      : POSIXct[1:138], format: \"2022-07-27 05:37:30\" ... #>  $ f_flux        : num [1:138] -14.09 4.48 -23.22 15.2 -17.91 ... #>  $ f_model       : chr [1:138] \"exp_zhao18\" \"exp_zhao18\" \"exp_zhao1\".."},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/articles/fluxible.html","id":"gross-primary-production-calculation","dir":"Articles","previous_headings":"","what":"Gross Primary Production calculation","title":"Practical example: from raw gas concentration data to clean ecosystem gas fluxes.","text":"CO2 flux chambers tents can used measure net ecosystem exchange (NEE) ecosystem respiration (ER) user manipulates light levels chamber. difference two gross primary production (GPP), measured isolated ER often variable interest.        function flux_gep calculates GPP GPP=NEE−ERGPP = NEE - ER returns dataset long format, NEE, ER GPP flux type filling variables specified user (cols_keep argument) values corresponding NEE measurement. type flux ER NEE, present dataset (e.g. light response curves, soil respiration) kept.  NEE ER measurements need paired together calculation. id_cols argument specifies columns used pairing (e.g., date, campaign). Since measurements done continuously 24 hours, added pairID column, pairing NEE measurement following ER measurement. pairs NEE ER measurements plot round measurement systematically measured ER NEE plot. Structure flux dataset including GPP:","code":"library(tidyverse)  fluxes_liahovden_60 <- fluxes_liahovden_60 |>   mutate(     f_fluxid = as.integer(f_fluxid),     pairID = case_when(       type == \"NEE\" ~ f_fluxid,       type == \"ER\" ~ f_fluxid - 1     ),     f_fluxid = as_factor(f_fluxid),     pairID = as_factor(pairID)   )  gpp_liahovden_60 <- flux_gpp(   fluxes_df = fluxes_liahovden_60,   type_col = type, # the column specifying the type of measurement   f_datetime = datetime,   id_cols = c(\"pairID\", \"turfID\"),   cols_keep = c(\"temp_soil_ave\", \"PAR_ave\"), # or \"none\" (default) or \"all\"   nee_arg = \"NEE\", # default value   er_arg = \"ER\" # default value ) #> tibble [207 × 7] (S3: tbl_df/tbl/data.frame) #>  $ datetime     : POSIXct[1:207], format: \"2022-07-27 05:37:30\" ... #>  $ type         : chr [1:207] \"GPP\" \"NEE\" \"ER\" \"GPP\" ... #>  $ f_flux       : num [1:207] -18.57 -14.09 4.48 -38.42 -23.22 ... #>  $ temp_soil_ave: num [1:207] 6.96 6.96 7.01 6.83 6.83 ... #>  $ PAR_ave      : num [1:207] 24.24 24.24 1.05 28.81 28.81 ... #>  $ pairID       : Factor w/ 69 levels \"1\",\"3\",\"5\",\"7\",..: 1 1 1 2 2 .. #>  $ turfID       : chr [1:207] \"4 AN1C 4\" \"4 AN1C 4\" \"4 AN1C 4\" \"27 \".."},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Gaudard. Author, maintainer. Richard James Telford. Author.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gaudard J, Chacon-Labella J, Dawson HR, Enquist B, Telford RJ, Töpper JP, Trepel J, Vandvik V, Baumane M, Birkeli K, Holle MJM, Hupp JR, Santos-Andrade PE, Satriawan TW, Halbritter AH (2025). “Fluxible: R package process ecosystem gas fluxes closed-loop chambers automated reproducible way.” Authorea. doi:10.22541/au.175071021.14153294/v1, preprint.","code":"@Article{,   title = {Fluxible: an {R} package to process ecosystem gas fluxes from closed-loop chambers in an automated and reproducible way},   year = {2025},   author = {Joseph Gaudard and Julia Chacon-Labella and Hilary Rose Dawson and Brian Enquist and Richard J Telford and Joachim P Töpper and Jonas Trepel and Vigdis Vandvik and Marta Baumane and Kristine Birkeli and Mukhlish Jamal Musa Holle and Jason R Hupp and Paul Efren Santos-Andrade and Tin Widyani Satriawan and Aud H Halbritter},   journal = {Authorea},   note = {preprint},   doi = {10.22541/au.175071021.14153294/v1}, }"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"fluxible","dir":"","previous_headings":"","what":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"Fluxible R package made transform dataset gas concentration time gas flux dataset. originally made used closed loop chamber system connected gas analyzer. goal fluxible provide workflow removes individual evaluation flux, reduces risk bias, makes reproducible. Users set specific data quality standards selection parameters function arguments applied entire dataset. Fluxible offers different methods estimate fluxes: linear, quadratic, exponential (Zhao et al., 2018), original HM model (Hutchinson Mosier, 1981; Pedersen et al., 2010). kappamax method (Hüppi et al., 2018) also included, quality control step. package runs calculations automatically, without prompting user take decisions mid-way, provides quality flags plots end process visual check. makes easy use large flux datasets integrate reproducible automated data processing pipeline targets R package (Landau, 2021). Using Fluxible R package makes workflow reproducible, increases compatibility across studies, time efficient. visual overview package, see poster.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"Fluxible can installed CRAN. can install development version fluxible GitHub repo :","code":"install.packages(\"fluxible\") # install.packages(\"devtools\") devtools::install_github(\"plant-functional-trait-course/fluxible\")"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"short-example","dir":"","previous_headings":"","what":"Short example","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"Output flux_plot, showing fluxes plotted individually diagnostics quality flags.","code":"library(fluxible)  conc_df <- flux_match(   co2_df_short,   record_short,   datetime,   start,   measurement_length = 220 )  slopes_df <- flux_fitting(   conc_df,   conc,   datetime,   fit_type = \"exp_zhao18\",   end_cut = 60 ) #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done.  slopes_flag_df <- flux_quality(   slopes_df,   conc ) #>  #>  Total number of measurements: 6 #>  #>  ok   6   100 % #>  discard      0   0 % #>  zero     0   0 % #>  force_discard    0   0 % #>  start_error      0   0 % #>  no_data      0   0 % #>  force_ok     0   0 % #>  force_zero   0   0 % #>  force_lm     0   0 % #>  no_slope     0   0 %  flux_plot(   slopes_flag_df,   conc,   datetime,   f_ylim_lower = 390,   f_ylim_upper = 650,   facet_wrap_args = list(     ncol = 3,     nrow = 2,     scales = \"free\"   ) ) #> Plotting in progress fluxes_df <- flux_calc(   slopes_flag_df,   f_slope_corr,   datetime,   temp_air,   conc_unit = \"ppm\",   flux_unit = \"mmol/m2/h\",   cols_keep = c(\"turfID\", \"type\"),   cols_ave = c(\"temp_soil\", \"PAR\"),   setup_volume = 24.575,   atm_pressure = 1,   plot_area = 0.0625 ) #> Cutting data according to 'keep_arg'... #> Averaging air temperature for each flux... #> Creating a df with the columns from 'cols_keep' argument... #> Creating a df with the columns from 'cols_ave' argument... #> Calculating fluxes... #> R constant set to 0.082057 #> Concentration was measured in ppm #> Fluxes are in mmol/m2/h  fluxes_gpp <- flux_gpp(   fluxes_df,   type,   datetime,   id_cols = \"turfID\",   cols_keep = c(\"temp_soil_ave\") ) #> Warning in flux_gpp(fluxes_df, type, datetime, id_cols = \"turfID\", cols_keep = c(\"temp_soil_ave\")):  #>  NEE missing for measurement turfID: 156 AN2C 156  fluxes_gpp #> # A tibble: 9 × 5 #>   datetime            type  f_flux temp_soil_ave turfID       #>   <dttm>              <chr>  <dbl>         <dbl> <chr>        #> 1 2022-07-28 23:43:25 ER     51.9           10.9 156 AN2C 156 #> 2 2022-07-28 23:47:12 GPP     9.72          10.7 74 WN2C 155  #> 3 2022-07-28 23:47:12 NEE    32.0           10.7 74 WN2C 155  #> 4 2022-07-28 23:52:00 ER     22.3           10.7 74 WN2C 155  #> 5 2022-07-28 23:59:22 GPP    -6.63          10.8 109 AN3C 109 #> 6 2022-07-28 23:59:22 NEE    44.3           10.8 109 AN3C 109 #> 7 2022-07-29 00:03:00 ER     50.9           10.5 109 AN3C 109 #> 8 2022-07-29 00:06:25 GPP    NA             12.2 29 WN3C 106  #> 9 2022-07-29 00:06:25 NEE    32.7           12.2 29 WN3C 106"},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"the-licoread-r-package","dir":"","previous_headings":"Further developments","what":"The licoread R package","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"licoread R package, developped collaboration LI-COR, provides easy way import raw files Li-COR gas analyzers R objects can used directly Fluxible R package.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"segmentation-tool","dir":"","previous_headings":"Further developments","what":"Segmentation tool","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"working tool automatically select window measurement fit model. selection based environmental variable, photosynthetically active radiation (PAR), measured simultaneously.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"more-fits","dir":"","previous_headings":"Further developments","what":"More fits","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"want fluxible fit use many projects possible, fitting expressions included flux_fitting function. Feel welcome get touch wish include fluxible.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"Joseph Gaudard, University Bergen, Norway joseph.gaudard@pm.GitHub page","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"dissemination","dir":"","previous_headings":"","what":"Dissemination","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"running course want talk Fluxible, feel free use two-slides presentation. course, can always reach wish material. Gaudard, J., Trepel, J., Dawson, H. R., Enquist, B., Halbritter, . H., Mustri, M., Niittynen, P., Santos-Andrade, P. E., Topper, J. P., Vandvik, V., Telford, R. J.: Fluxible: R package calculate ecosystem gas fluxes closed loop chamber systems reproducible automated workflow (slides), EGU General Assembly 2025, Vienna, Austria, 27 Apr–2 May 2025, EGU25-12409, https://doi.org/10.5194/egusphere-egu25-12409, 2025. Gaudard, J., Telford, R., Vandvik, V., Halbritter, . H.: Fluxible: R package calculate ecosystem gas fluxes reproducible automated workflow. (poster), EGU General Assembly 2024, Vienna, Austria, 14–19 Apr 2024, EGU24-956, https://doi.org/10.5194/egusphere-egu24-956, 2024.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup","text":"Fluxible builds earlier effort Plant Functional Traits Course Community co2fluxtent (Brummer et al., 2023).","code":""},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_conc","title":"CO2 concentration — co2_conc","text":"CO2 concentration measurements meta data","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_conc","text":"","code":"co2_conc"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_conc","text":"tibble 1251 rows 13 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). f_start Datetime measurement started. f_end Datetime measurement ended. f_fluxid Unique ID flux. f_n_conc Number data point per flux. f_ratio Ratio n_conc length measurement (seconds). f_flag_match Data quality flags.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_conc","text":"","code":"co2_conc #> # A tibble: 1,251 × 13 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA    453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_n_conc <dbl>, f_ratio <dbl>, f_flag_match <chr>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_mid_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration with missing data — co2_conc_mid_missing","title":"CO2 concentration with missing data — co2_conc_mid_missing","text":"CO2 concentration measurements meta data missing data middle measurements","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_mid_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration with missing data — co2_conc_mid_missing","text":"","code":"co2_conc_mid_missing"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_mid_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration with missing data — co2_conc_mid_missing","text":"tibble 1251 rows 13 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). f_start Datetime measurement started. f_end Datetime measurement ended. f_fluxid Unique ID flux. f_n_conc Number data point per flux. f_ratio Ratio n_conc length measurement (seconds). f_flag_match Data quality flags.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_mid_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration with missing data — co2_conc_mid_missing","text":"","code":"co2_conc_mid_missing #> # A tibble: 1,251 × 13 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     NA  NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_n_conc <dbl>, f_ratio <dbl>, f_flag_match <chr>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_conc_missing","title":"CO2 concentration — co2_conc_missing","text":"CO2 concentration measurements meta data, missing data.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_conc_missing","text":"","code":"co2_conc_missing"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_conc_missing","text":"tibble 668 rows 13 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). f_start Datetime measurement started. f_end Datetime measurement ended. f_fluxid Unique ID flux. f_n_conc Number data point per flux. f_ratio Ratio n_conc length measurement (seconds). f_flag_match Data quality flags.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_conc_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_conc_missing","text":"","code":"co2_conc_missing #> # A tibble: 668 × 13 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35       NA        NA   NA     NA 156 AN2C 156 ER    #>  2 2022-07-28 23:45:37       NA        NA  514.    NA 156 AN2C 156 ER    #>  3 2022-07-28 23:45:38       NA        NA  513.    NA 156 AN2C 156 ER    #>  4 2022-07-28 23:45:39       NA        NA  513.    NA 156 AN2C 156 ER    #>  5 2022-07-28 23:45:40       NA        NA  514.    NA 156 AN2C 156 ER    #>  6 2022-07-28 23:45:41       NA        NA  514.    NA 156 AN2C 156 ER    #>  7 2022-07-28 23:45:42       NA        NA  515.    NA 156 AN2C 156 ER    #>  8 2022-07-28 23:45:43       NA        NA  515.    NA 156 AN2C 156 ER    #>  9 2022-07-28 23:45:44       NA        NA  515.    NA 156 AN2C 156 ER    #> 10 2022-07-28 23:45:45       NA        NA  515.    NA 156 AN2C 156 ER    #> # ℹ 658 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_n_conc <dbl>, f_ratio <dbl>, f_flag_match <chr>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration with missing data — co2_df_missing","title":"CO2 concentration with missing data — co2_df_missing","text":"Continuous CO2 concentration measured field, missing data.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration with missing data — co2_df_missing","text":"","code":"co2_df_missing"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration with missing data — co2_df_missing","text":"tibble 1148 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration with missing data — co2_df_missing","text":"","code":"co2_df_missing #> # A tibble: 1,148 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-28 23:40:00    NA         NA    471. NA    #>  2 2022-07-28 23:40:01    NA         NA    472. NA    #>  3 2022-07-28 23:40:02    NA         NA    472. NA    #>  4 2022-07-28 23:40:03    NA         NA    473. NA    #>  5 2022-07-28 23:40:04    NA         NA    474. NA    #>  6 2022-07-28 23:40:05    NA         NA    475. NA    #>  7 2022-07-28 23:40:06     7.08      11.1  475.  2.44 #>  8 2022-07-28 23:40:07    NA         NA    476. NA    #>  9 2022-07-28 23:40:08    NA         NA    476. NA    #> 10 2022-07-28 23:40:09    NA         NA    477. NA    #> # ℹ 1,138 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_short.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_df_short","title":"CO2 concentration — co2_df_short","text":"Continuous CO2 concentration measured field","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_df_short","text":"","code":"co2_df_short"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_df_short","text":"tibble 1801 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_df_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_df_short","text":"","code":"co2_df_short #> # A tibble: 1,801 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-28 23:40:00    NA         NA    471. NA    #>  2 2022-07-28 23:40:01    NA         NA    472. NA    #>  3 2022-07-28 23:40:02    NA         NA    472. NA    #>  4 2022-07-28 23:40:03    NA         NA    473. NA    #>  5 2022-07-28 23:40:04    NA         NA    474. NA    #>  6 2022-07-28 23:40:05    NA         NA    475. NA    #>  7 2022-07-28 23:40:06     7.08      11.1  475.  2.44 #>  8 2022-07-28 23:40:07    NA         NA    476. NA    #>  9 2022-07-28 23:40:08    NA         NA    476. NA    #> 10 2022-07-28 23:40:09    NA         NA    477. NA    #> # ℹ 1,791 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 fluxes — co2_fluxes","title":"CO2 fluxes — co2_fluxes","text":"Manually calculated CO2 fluxes testing purpose. df_short record_short used, zhao18 fit.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 fluxes — co2_fluxes","text":"","code":"co2_fluxes"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 fluxes — co2_fluxes","text":"tibble 6 rows 11 variables f_fluxid Unique ID flux. f_slope_tz Slope C(t) t zero. f_temp_air_ave Air temperature inside flux chamber Celsius averaged flux measurement. f_flux CO2 flux mmol/sqm/hour. PAR Photosynthetically active radiation inside chamber micromol/s/sqm averaged flux measurement. temp_soil Ground temperature inside flux chamber Celsius averaged flux measurement. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). f_start Datetime measurement started. temp_fahr Air temperature inside flux chamber Fahrenheit averaged flux measurement. temp_kelvin Air temperature inside flux chamber Kelvin averaged flux measurement.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 fluxes — co2_fluxes","text":"","code":"co2_fluxes #> # A tibble: 6 × 11 #>   f_fluxid f_slope_tz f_temp_air_ave f_flux   PAR temp_soil turfID       type  #>   <fct>         <dbl>          <dbl>  <dbl> <dbl>     <dbl> <fct>        <fct> #> 1 1             1.56            7.31   95.6  1.95      10.8 156 AN2C 156 ER    #> 2 2             0.853           7.38   52.4  2.11      10.7 74 WN2C 155  NEE   #> 3 3             0.303           7.46   18.6  2.04      10.7 74 WN2C 155  ER    #> 4 4             1.13            7.77   69.4  1.84      10.8 109 AN3C 109 NEE   #> 5 5             1.46            7.71   89.9  1.66      10.6 109 AN3C 109 ER    #> 6 6             0.426           7.75   26.2  1.78      12.2 29 WN3C 106  NEE   #> # ℹ 3 more variables: f_start <dttm>, temp_fahr <dbl>, temp_kelvin <dbl>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes_lrc.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 fluxes with PAR values — co2_fluxes_lrc","title":"CO2 fluxes with PAR values — co2_fluxes_lrc","text":"CO2 fluxes photosynthetically active radiation (PAR) testing examples light response curves (LRC)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes_lrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 fluxes with PAR values — co2_fluxes_lrc","text":"","code":"co2_fluxes_lrc"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes_lrc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 fluxes with PAR values — co2_fluxes_lrc","text":"tibble 257 rows 5 variables f_flux CO2 flux mmol/sqm/hour. datetime Time date measurement. PAR_ave Photosynthetically active radiation inside chamber micromol/s/sqm averaged flux measurement. type Type measurement: ecosystems respiration (ER), net ecosystem exchange (NEE), light response curve (LRC). warming Treatment: control warming.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_fluxes_lrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 fluxes with PAR values — co2_fluxes_lrc","text":"","code":"co2_fluxes_lrc #> # A tibble: 257 × 5 #>      PAR_ave type  datetime            f_flux warming #>        <dbl> <chr> <dttm>               <dbl> <chr>   #>  1 1158.     NEE   2020-08-08 16:31:00  0.489 control #>  2    0.0941 ER    2020-08-22 10:56:45 22.5   control #>  3    0.119  ER    2020-08-22 11:00:15 29.9   control #>  4    0.131  ER    2020-08-22 11:03:30 26.3   control #>  5   81.9    NEE   2020-08-22 11:07:00 13.4   control #>  6   87.1    NEE   2020-08-22 11:10:15 13.1   control #>  7   88.3    NEE   2020-08-22 11:14:45 23.6   control #>  8    0.218  ER    2020-08-22 11:19:45 67.2   warming #>  9    0.252  ER    2020-08-22 11:22:45 48.8   warming #> 10    0.324  ER    2020-08-22 11:25:45 65.7   warming #> # ℹ 247 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_liahovden.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration at Liahovden — co2_liahovden","title":"CO2 concentration at Liahovden — co2_liahovden","text":"CO2 concentration Liahovden site, used example readme file","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_liahovden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration at Liahovden — co2_liahovden","text":"","code":"co2_liahovden"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_liahovden.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration at Liahovden — co2_liahovden","text":"tibble 89692 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/co2_liahovden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration at Liahovden — co2_liahovden","text":"","code":"co2_liahovden #> # A tibble: 89,692 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-27 05:34:49        3      2.96  468.  2.59 #>  2 2022-07-27 05:34:50       NA     NA     469. NA    #>  3 2022-07-27 05:34:51       NA     NA     468. NA    #>  4 2022-07-27 05:34:52       NA     NA     468. NA    #>  5 2022-07-27 05:34:53       NA     NA     468. NA    #>  6 2022-07-27 05:34:54       NA     NA     468. NA    #>  7 2022-07-27 05:34:55       NA     NA     468. NA    #>  8 2022-07-27 05:34:56       NA     NA     468. NA    #>  9 2022-07-27 05:34:57       NA     NA     467. NA    #> 10 2022-07-27 05:34:58       NA     NA     468. NA    #> # ℹ 89,682 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates ecosystem gas fluxes — flux_calc","title":"Calculates ecosystem gas fluxes — flux_calc","text":"Calculates flux based rate change gas concentration time","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates ecosystem gas fluxes — flux_calc","text":"","code":"flux_calc(   slopes_df,   slope_col,   f_datetime = f_datetime,   temp_air_col,   chamber_volume = deprecated(),   setup_volume,   atm_pressure,   plot_area,   f_fluxid = f_fluxid,   conc_unit,   flux_unit,   cols_keep = c(),   cols_ave = c(),   cols_sum = c(),   cols_med = c(),   cols_nest = \"none\",   tube_volume = deprecated(),   temp_air_unit = \"celsius\",   f_cut = f_cut,   keep_arg = \"keep\",   cut = TRUE,   fit_type = c() )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates ecosystem gas fluxes — flux_calc","text":"slopes_df dataframe flux slopes slope_col column containing slope calculate flux f_datetime column containing datetime gas concentration measurements slopes_df. first one cutting kept datetime flux output. temp_air_col column containing air temperature used calculate fluxes. averaged NA removed. chamber_volume see setup_volume setup_volume volume flux chamber instrument together L, can also column case variable atm_pressure atmospheric pressure atm, can constant (numerical) variable (column name) plot_area area plot m^2, can also column case variable f_fluxid column containing flux IDs conc_unit unit concentration gas measured ppm, ppb, ppt flux_unit desired units calculated fluxes. form amount/surface/time. Amount can mol, mmol, umol, nmol pmol. Time can d (day), h (hour), mn (minute) s (seconds). Surface can m2, dm2 cm2. cols_keep columns keep input output. columns need unique values flux, distinct applied. cols_ave columns values averaged flux output. Note NA removed mean calculation. columns get _ave suffix output. cols_sum columns values sum provided flux output. columns get _sum suffix output. cols_med columns values median provided flux output. Note NA removed median calculation. columns get _med suffix output. cols_nest columns nest nested_variables flux output. Can character vector column names, \"none\" (default) selects none, \"\" selects column except cols_keep. tube_volume see setup_volume temp_air_unit units air temperature measured. either celsius (default), fahrenheit kelvin. f_cut column containing cutting information keep_arg name f_cut data keep cut 'TRUE' (default), measurements cut according 'f_cut' calculating fluxes. influence flux since slope provided flux_fitting, influence values variables cols_ave, cols_cum, cols_med. fit_type (optional) model used flux_fitting. automatically filled slopes_df produced using flux_fitting.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates ecosystem gas fluxes — flux_calc","text":"dataframe containing flux IDs, datetime measurements' starts, fluxes mmol * m-2 * h-1 micromol * m-2 * h-1 (f_flux) according flux_unit, temperature average flux Kelvin (f_temp_ave), model used flux_fitting, column specified cols_keep, column specified cols_ave, cols_med cols_sum values treated accordingly measurement cuts, column nested_variables variables specified cols_nest.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_calc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates ecosystem gas fluxes — flux_calc","text":"","code":"data(co2_conc) slopes <- flux_fitting(co2_conc, conc, datetime, fit_type = \"exp_zhao18\") #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds flux_calc(slopes, f_slope, datetime, temp_air, conc_unit = \"ppm\", flux_unit = \"mmol/m2/h\", setup_volume = 24.575, atm_pressure = 1, plot_area = 0.0625) #> Cutting data according to 'keep_arg'... #> Averaging air temperature for each flux... #> Calculating fluxes... #> R constant set to 0.082057 #> Concentration was measured in ppm #> Fluxes are in mmol/m2/h #> # A tibble: 6 × 6 #>   f_fluxid f_slope f_temp_air_ave datetime            f_flux f_model    #>   <fct>      <dbl>          <dbl> <dttm>               <dbl> <chr>      #> 1 1          1.56            7.31 2022-07-28 23:43:35   95.6 exp_zhao18 #> 2 2          0.853           7.38 2022-07-28 23:47:22   52.4 exp_zhao18 #> 3 3          0.303           7.46 2022-07-28 23:52:10   18.6 exp_zhao18 #> 4 4          1.13            7.77 2022-07-28 23:59:32   69.4 exp_zhao18 #> 5 5          1.46            7.71 2022-07-29 00:03:10   89.9 exp_zhao18 #> 6 6          0.426           7.75 2022-07-29 00:06:35   26.2 exp_zhao18"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_check_item.html","id":null,"dir":"Reference","previous_headings":"","what":"check the items inside flux_fun_check — flux_check_item","title":"check the items inside flux_fun_check — flux_check_item","text":"check items inside flux_fun_check","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_check_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the items inside flux_fun_check — flux_check_item","text":"","code":"flux_check_item(arg, fn, msg, narg, df_name = NA)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_check_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check the items inside flux_fun_check — flux_check_item","text":"arg argument checked fn fn function check arg msg message display case arg wrong class narg name arg df_name name arg case data frame","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_check_item.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"check the items inside flux_fun_check — flux_check_item","text":"Adam Klimes","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_cut.html","id":null,"dir":"Reference","previous_headings":"","what":"filter cut data before calculating fluxes — flux_cut","title":"filter cut data before calculating fluxes — flux_cut","text":"filter cut data calculating fluxes","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter cut data before calculating fluxes — flux_cut","text":"","code":"flux_cut(slopes_df, cut_col, keep_arg)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter cut data before calculating fluxes — flux_cut","text":"slopes_df dataset containing slopes cut column cut_col column containing cutting information keep_arg name cut_col data keep","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fit_type.html","id":null,"dir":"Reference","previous_headings":"","what":"to check the type of fit — flux_fit_type","title":"to check the type of fit — flux_fit_type","text":"extracts type fit applied flux_fitting checks fit_type provided user compatible Fluxible","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fit_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"to check the type of fit — flux_fit_type","text":"","code":"flux_fit_type(   df,   fit_type = c(),   fit_type_list = c(\"exp_hm\", \"exp_tz\", \"exp_zhao18\", \"exponential\", \"linear\",     \"quadratic\") )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fit_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"to check the type of fit — flux_fit_type","text":"df dataframe fit_type type fit applied flux_fitting. Needs filled df produced outside Fluxible workflow. fit_type_list list fit types use Fluxible.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a model to concentration data and estimating the slope — flux_fitting","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"Fits gas concentration time data model (exponential, quadratic linear) provides slope later used calculate gas fluxes flux_calc","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"","code":"flux_fitting(   conc_df,   f_conc = f_conc,   f_datetime = f_datetime,   f_start = f_start,   f_end = f_end,   f_fluxid = f_fluxid,   fit_type,   start_cut = 0,   end_cut = 0,   t_zero = 0,   cz_window = 15,   b_window = 10,   a_window = 10,   roll_width = 15 )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"conc_df dataframe gas concentration time f_conc column gas concentration data f_datetime column datetime concentration measurement Note duplicated datetime f_fluxid first row kept f_start column datetime measurement started (ymd_hms) f_end column datetime measurement ended (ymd_hms) f_fluxid column ID flux fit_type exp_zhao18, exp_tz, exp_hm, quadratic linear. exp_zhao18 using exponential model C(t) = C_m + (t - t_z) + (C_z - C_m) exp(-b (t - t_z)) Zhao et al (2018). expt_tz modified version allows user fix t_zero: C(t) = C_m + * t + (C_z - C_m) exp(-b * t) exp_hm using HM model (Pedersen et al., 2010; Hutchinson Mosier, 1981) C(t) = C_m + (C_z - C_m) exp(-b * t) exponential equal exp_zhao18, backwards compatibility start_cut time discard start measurements (seconds) end_cut time discard end measurements (seconds) t_zero time slope calculated (quadratic, exp_tz exp_hm fits) cz_window window used calculate Cz, beginning cut window (exp_zhao18 exp_tz fits) b_window window estimate b. interval tz assumed model fits data perfectly (exp_zhao18 exp_tz fits) a_window window end flux estimate (exp_zhao18 exp_tz fits) roll_width width rolling mean gas concentration looking tz, ideally cz_window (exp_zhao18 exp_tz fits)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"dataframe slope t zero (f_slope), datetime column t zero (f_start_z), factor column indicating cuts (f_cut), time seconds since start measurement (f_time), modeled fit (f_fit), modeled slope (f_fit_slope), parameters fit depending model used, columns present input. type fit added attribute use functions.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"Pedersen, .R., Petersen, S.O., Schelde, K., 2010. comprehensive approach soil-atmosphere trace-gas flux estimation static chambers. European Journal Soil Science 61, 888–902. https://doi.org/10.1111/j.1365-2389.2010.01291.x Hutchinson, G.L., Mosier, .R., 1981. Improved Soil Cover Method Field Measurement Nitrous Oxide Fluxes. Soil Science Society America Journal 45, 311–316. https://doi.org/10.2136/sssaj1981.03615995004500020017x Zhao, P., Hammerle, ., Zeeman, M., Wohlfahrt, G., 2018. calculation daytime CO2 fluxes measured automated closed transparent chambers. Agricultural Forest Meteorology 263, 267–275. https://doi.org/10.1016/j.agrformet.2018.08.022","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting a model to concentration data and estimating the slope — flux_fitting","text":"","code":"data(co2_conc) flux_fitting(co2_conc, conc, datetime, fit_type = \"exp_zhao18\") #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds #> # A tibble: 1,251 × 29 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA    453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, f_cut <fct>, #> #   f_rsquared_lm <dbl>, f_adj_rsquared_lm <dbl>, f_slope_lm <dbl>, #> #   f_intercept_lm <dbl>, f_pvalue_lm <dbl>, f_fit_lm <dbl>, f_Cz <dbl>, #> #   f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, f_slope <dbl>, f_fit <dbl>, #> #   f_fit_slope <dbl>, f_start_z <dttm> flux_fitting(co2_conc, conc, datetime,  fit_type = \"quadratic\", t_zero = 10, end_cut = 30) #> # A tibble: 1,251 × 30 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA    453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 23 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, f_cut <fct>, #> #   f_rsquared_lm <dbl>, f_adj_rsquared_lm <dbl>, f_slope_lm <dbl>, #> #   f_intercept_lm <dbl>, f_pvalue_lm <dbl>, f_fit_lm <dbl>, f_param1 <dbl>, #> #   f_param2 <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_pvalue <dbl>, f_slope <dbl>, f_fit <dbl>, f_fit_slope <dbl>, …"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_exptz.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","text":"Fits exponential expression concentration evolution C(t) = C_m + * t + (C_z - C_m) exp(-b * t)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_exptz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","text":"","code":"flux_fitting_exptz(   conc_df_cut,   conc_df,   f_conc,   f_start,   f_fluxid,   start_cut,   cz_window,   b_window,   a_window,   roll_width,   t_zero )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_exptz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","text":"conc_df_cut dataframe gas concentration time, cut conc_df dataframe gas concentration time f_conc column gas concentration f_start column datetime measurement started f_fluxid column ID flux start_cut time discard start measurements (seconds) cz_window window used calculate Cz, beginning cut window b_window window estimate b. interval tz assumed C fits data perfectly a_window window end flux estimate roll_width width rolling mean CO2 looking tz, ideally cz_window t_zero time slope calculated (quadratic fit)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_exptz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","text":"dataframe slope t zero, modeled concentration time exponential expression parameters","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_exptz.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using a modified version of the model from Zhao et al (2018) that allows the user to fix t_zero. — flux_fitting_exptz","text":"Zhao, P., Hammerle, ., Zeeman, M., Wohlfahrt, G., 2018. calculation daytime CO2 fluxes measured automated closed transparent chambers. Agricultural Forest Meteorology 263, 267–275. https://doi.org/10.1016/j.agrformet.2018.08.022","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_hm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","text":"Fits exponential expression concentration evolution C(t) = C_m + (C_z - C_m) exp(-b * t)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_hm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","text":"","code":"flux_fitting_hm(   conc_df_cut,   conc_df,   f_conc,   f_start,   f_fluxid,   start_cut,   cz_window,   b_window,   roll_width,   t_zero )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_hm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","text":"conc_df_cut dataframe gas concentration time, cut conc_df dataframe gas concentration time f_conc column gas concentration f_start column datetime measurement started f_fluxid column ID flux start_cut time discard start measurements (seconds) cz_window window used calculate Cz, beginning cut window b_window window estimate b. interval tz assumed C fits data perfectly roll_width width rolling mean CO2 looking tz, ideally cz_window t_zero time slope calculated (quadratic fit)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_hm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","text":"dataframe slope t zero, modeled concentration time exponential expression parameters","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_hm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the HM model (Pedersen et al., 2010; Hutchinson and Mosier, 1981). — flux_fitting_hm","text":"Pedersen, .R., Petersen, S.O., Schelde, K., 2010. comprehensive approach soil-atmosphere trace-gas flux estimation static chambers. European Journal Soil Science 61, 888–902. https://doi.org/10.1111/j.1365-2389.2010.01291.x Hutchinson, G.L., Mosier, .R., 1981. Improved Soil Cover Method Field Measurement Nitrous Oxide Fluxes. Soil Science Society America Journal 45, 311–316. https://doi.org/10.2136/sssaj1981.03615995004500020017x","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"linear fit to gas concentration over time — flux_fitting_lm","title":"linear fit to gas concentration over time — flux_fitting_lm","text":"fits linear model gas concentration time","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linear fit to gas concentration over time — flux_fitting_lm","text":"","code":"flux_fitting_lm(conc_df_cut, conc_df, f_conc, f_fluxid, start_cut)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linear fit to gas concentration over time — flux_fitting_lm","text":"conc_df_cut dataframe gas concentration time, cut conc_df dataframe gas concentration time f_conc column gas concentration f_fluxid column ID flux start_cut time discard start measurements (seconds)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linear fit to gas concentration over time — flux_fitting_lm","text":"df modeled gas concentration, slope, intercept, std error, r square p value linear model","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_quadratic.html","id":null,"dir":"Reference","previous_headings":"","what":"quadratic fit to gas concentration over time — flux_fitting_quadratic","title":"quadratic fit to gas concentration over time — flux_fitting_quadratic","text":"fits quadratic model gas concentration time","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_quadratic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quadratic fit to gas concentration over time — flux_fitting_quadratic","text":"","code":"flux_fitting_quadratic(   conc_df_cut,   conc_df,   f_conc,   f_start,   f_fluxid,   start_cut,   t_zero )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_quadratic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quadratic fit to gas concentration over time — flux_fitting_quadratic","text":"conc_df_cut dataframe gas concentration time, cut conc_df dataframe gas concentration time f_conc column gas concentration f_start column datetime measurement started f_fluxid column ID flux start_cut time discard start measurements (seconds) t_zero time slope calculated","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_quadratic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quadratic fit to gas concentration over time — flux_fitting_quadratic","text":"df modeled gas concentration, slope, intercept, std error, r square p value quadratic model","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_zhao18.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","text":"Fits exponential expression concentration evolution","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_zhao18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","text":"","code":"flux_fitting_zhao18(   conc_df_cut,   conc_df,   f_conc,   f_start,   f_fluxid,   start_cut,   cz_window,   b_window,   a_window,   roll_width )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_zhao18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","text":"conc_df_cut dataframe gas concentration time, cut conc_df dataframe gas concentration time f_conc column gas concentration f_start column datetime measurement started f_fluxid column ID flux start_cut time discard start measurements (seconds) cz_window window used calculate Cz, beginning cut window b_window window estimate b. interval tz assumed C fits data perfectly a_window window end flux estimate roll_width width rolling mean CO2 looking tz, ideally cz_window","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_zhao18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","text":"dataframe slope t zero, modeled concentration time exponential expression parameters","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fitting_zhao18.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting a model to the gas concentration curve and estimating the slope over time, using the exponential model from Zhao et al (2018) — flux_fitting_zhao18","text":"Zhao, P., Hammerle, ., Zeeman, M., Wohlfahrt, G., 2018. calculation daytime CO2 fluxes measured automated closed transparent chambers. Agricultural Forest Meteorology 263, 267–275. https://doi.org/10.1016/j.agrformet.2018.08.022","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts quality flags — flux_flag_count","title":"Counts quality flags — flux_flag_count","text":"Provides table many fluxes attributed quality flag. function incorporated flux_quality message, can used alone extract dataframe flag count.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts quality flags — flux_flag_count","text":"","code":"flux_flag_count(   flags_df,   f_fluxid = f_fluxid,   f_quality_flag = f_quality_flag,   f_flags = c(\"ok\", \"discard\", \"zero\", \"force_discard\", \"start_error\", \"no_data\",     \"force_ok\", \"force_zero\", \"force_lm\", \"no_slope\") )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts quality flags — flux_flag_count","text":"flags_df dataframe flux slopes f_fluxid column containing fluxes unique ID f_quality_flag column containing quality flags f_flags list flags used dataset (different default flux_quality). provided, list flags present dataset (showing 0).","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts quality flags — flux_flag_count","text":"dataframe number fluxes quality flags proportion total","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Counts quality flags — flux_flag_count","text":"Vincent Belde","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_flag_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts quality flags — flux_flag_count","text":"","code":"data(co2_conc) slopes <- flux_fitting(co2_conc, conc, datetime, fit_type = \"exp_zhao18\") #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds slopes_flag <- flux_quality(slopes, conc) #>  #>  Total number of measurements: 6 #>  #>  ok \t 3 \t 50 % #>  discard \t 2 \t 33 % #>  zero \t 1 \t 17 % #>  force_discard \t 0 \t 0 % #>  start_error \t 0 \t 0 % #>  no_data \t 0 \t 0 % #>  force_ok \t 0 \t 0 % #>  force_zero \t 0 \t 0 % #>  force_lm \t 0 \t 0 % #>  no_slope \t 0 \t 0 % flux_flag_count(slopes_flag) #> # A tibble: 10 × 3 #>    f_quality_flag     n ratio #>    <fct>          <int> <dbl> #>  1 ok                 3 0.5   #>  2 discard            2 0.333 #>  3 zero               1 0.167 #>  4 force_discard      0 0     #>  5 start_error        0 0     #>  6 no_data            0 0     #>  7 force_ok           0 0     #>  8 force_zero         0 0     #>  9 force_lm           0 0     #> 10 no_slope           0 0"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fun_check.html","id":null,"dir":"Reference","previous_headings":"","what":"checking that arguments and columns are in the correct class — flux_fun_check","title":"checking that arguments and columns are in the correct class — flux_fun_check","text":"checking arguments columns correct class","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fun_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checking that arguments and columns are in the correct class — flux_fun_check","text":"","code":"flux_fun_check(args, fn, msg, name_df = NA)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fun_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checking that arguments and columns are in the correct class — flux_fun_check","text":"args list arguments dataframe check fn list functions used check (.numeric, .character, ...) msg list messages return case failed check name_df case args df selected columns check origdf original df take name obvious error message","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_fun_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"checking that arguments and columns are in the correct class — flux_fun_check","text":"Adam Klimes","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gep.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates GEP — flux_gep","title":"Calculates GEP — flux_gep","text":"flux_gep renamed flux_gpp consistancy litterature. Calculate gross ecosystem production (GEP) net ecosystem (NEE) exchange ecosystem respiration (ER) GEP = NEE - ER. Datetime variables keep taken NEE measurement. Fluxes presents dataset neither NEE ER (soilR, LRC ) lost.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates GEP — flux_gep","text":"","code":"flux_gep(   fluxes_df,   type_col,   f_datetime,   f_flux = f_flux,   id_cols,   nee_arg = \"NEE\",   er_arg = \"ER\",   cols_keep = \"none\" )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates GEP — flux_gep","text":"fluxes_df dataframe containing NEE ER type_col column containing type flux (NEE ER) f_datetime column containing start measurement datetime f_flux column containing flux values id_cols columns used identify pair ER NEE nee_arg argument designating NEE fluxes type column er_arg argument designating ER fluxes type column cols_keep columns keep fluxes_df. Values NEE row filled GEP row. none (default) keeps columns id_cols, flux, type datetime columns; keeps columns; can also vector column names.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates GEP — flux_gep","text":"dataframe $GEP = NEE - ER$ long format GEP, NEE, ER flux type, datetime, column specified cols_keep. Values datetime columns cols_keep GEP row taken NEE measurements.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates GEP — flux_gep","text":"","code":"data(co2_fluxes) flux_gep(co2_fluxes, type, f_start, id_cols = \"turfID\", cols_keep = c(\"temp_soil\")) #> Warning: `flux_gep()` was deprecated in fluxible 1.1.1. #> ℹ Please use `flux_gpp()` instead. #> Warning:  #>  NEE missing for measurement turfID: 156 AN2C 156 #> # A tibble: 9 × 5 #>   f_start             type  f_flux temp_soil turfID       #>   <dttm>              <chr>  <dbl>     <dbl> <fct>        #> 1 2022-07-28 23:43:35 ER      95.6      10.8 156 AN2C 156 #> 2 2022-07-28 23:47:22 GPP     33.8      10.7 74 WN2C 155  #> 3 2022-07-28 23:47:22 NEE     52.4      10.7 74 WN2C 155  #> 4 2022-07-28 23:52:10 ER      18.6      10.7 74 WN2C 155  #> 5 2022-07-28 23:59:32 GPP    -20.5      10.8 109 AN3C 109 #> 6 2022-07-28 23:59:32 NEE     69.4      10.8 109 AN3C 109 #> 7 2022-07-29 00:03:10 ER      89.9      10.6 109 AN3C 109 #> 8 2022-07-29 00:06:35 GPP     NA        12.2 29 WN3C 106  #> 9 2022-07-29 00:06:35 NEE     26.2      12.2 29 WN3C 106"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates GPP — flux_gpp","title":"Calculates GPP — flux_gpp","text":"calculate gross primary production (GPP) net ecosystem (NEE) exchange ecosystem respiration (ER) GPP = NEE - ER. Datetime variables keep taken NEE measurement. Fluxes presents dataset neither NEE ER (soilR, LRC ) lost.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates GPP — flux_gpp","text":"","code":"flux_gpp(   fluxes_df,   type_col,   f_datetime,   f_flux = f_flux,   id_cols,   nee_arg = \"NEE\",   er_arg = \"ER\",   cols_keep = \"none\" )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates GPP — flux_gpp","text":"fluxes_df dataframe containing NEE ER type_col column containing type flux (NEE ER) f_datetime column containing start measurement datetime f_flux column containing flux values id_cols columns used identify pair ER NEE nee_arg argument designating NEE fluxes type column er_arg argument designating ER fluxes type column cols_keep columns keep fluxes_df. Values NEE row filled GPP row. none (default) keeps columns id_cols, flux, type datetime columns; keeps columns; can also vector column names.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates GPP — flux_gpp","text":"dataframe $GPP = NEE - ER$ long format GPP, NEE, ER flux type, datetime, column specified cols_keep. Values datetime columns cols_keep GPP row taken NEE measurements.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_gpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates GPP — flux_gpp","text":"","code":"data(co2_fluxes) flux_gpp(co2_fluxes, type, f_start, id_cols = \"turfID\", cols_keep = c(\"temp_soil\")) #> Warning:  #>  NEE missing for measurement turfID: 156 AN2C 156 #> # A tibble: 9 × 5 #>   f_start             type  f_flux temp_soil turfID       #>   <dttm>              <chr>  <dbl>     <dbl> <fct>        #> 1 2022-07-28 23:43:35 ER      95.6      10.8 156 AN2C 156 #> 2 2022-07-28 23:47:22 GPP     33.8      10.7 74 WN2C 155  #> 3 2022-07-28 23:47:22 NEE     52.4      10.7 74 WN2C 155  #> 4 2022-07-28 23:52:10 ER      18.6      10.7 74 WN2C 155  #> 5 2022-07-28 23:59:32 GPP    -20.5      10.8 109 AN3C 109 #> 6 2022-07-28 23:59:32 NEE     69.4      10.8 109 AN3C 109 #> 7 2022-07-29 00:03:10 ER      89.9      10.6 109 AN3C 109 #> 8 2022-07-29 00:06:35 GPP     NA        12.2 29 WN3C 106  #> 9 2022-07-29 00:06:35 NEE     26.2      12.2 29 WN3C 106"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"Calculates light response curves CO2 fluxes standardizes CO2 fluxes according LRC","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"","code":"flux_lrc(   fluxes_df,   type_col,   par_ave = par_ave,   f_flux = f_flux,   lrc_arg = \"LRC\",   nee_arg = \"NEE\",   er_arg = \"ER\",   lrc_group = c(),   par_nee = 300,   par_er = 0 )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"fluxes_df dataframe containing NEE, ER LRC measurements type_col column containing type flux (NEE, ER, LRC) par_ave column containing PAR value flux f_flux column containing flux values lrc_arg argument designating LRC fluxes type column nee_arg argument designating NEE fluxes type column er_arg argument designating ER fluxes type column lrc_group character vector columns use group LRC (campaign, site, treatment), applicable par_nee PAR value correct NEE fluxes par_er PAR value correct ER fluxes ","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"dataframe additional column PAR_corrected_flux","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"light response curves calculated quadratic form flux(PAR) = * PAR2 + b * PAR + c","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_lrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardizes CO2 fluxes at fixed PAR values — flux_lrc","text":"","code":"data(co2_fluxes_lrc) flux_lrc( fluxes_df = co2_fluxes_lrc, type_col = type, par_ave = PAR_ave, f_flux = f_flux, lrc_arg = \"LRC\", nee_arg = \"NEE\", er_arg = \"ER\", lrc_group = c(\"warming\"), par_nee = 300, par_er = 0 ) #> Joining with `by = join_by(warming)` #> # A tibble: 231 × 6 #>      PAR_ave type  datetime            f_flux warming PAR_corrected_flux #>        <dbl> <chr> <dttm>               <dbl> <chr>                <dbl> #>  1 1158.     NEE   2020-08-08 16:31:00  0.489 control              34.2  #>  2    0.0941 ER    2020-08-22 10:56:45 22.5   control              22.5  #>  3    0.119  ER    2020-08-22 11:00:15 29.9   control              29.9  #>  4    0.131  ER    2020-08-22 11:03:30 26.3   control              26.3  #>  5   81.9    NEE   2020-08-22 11:07:00 13.4   control              -1.73 #>  6   87.1    NEE   2020-08-22 11:10:15 13.1   control              -1.70 #>  7   88.3    NEE   2020-08-22 11:14:45 23.6   control               8.87 #>  8    0.218  ER    2020-08-22 11:19:45 67.2   warming              67.2  #>  9    0.252  ER    2020-08-22 11:22:45 48.8   warming              48.8  #> 10    0.324  ER    2020-08-22 11:25:45 65.7   warming              65.7  #> # ℹ 221 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"Matching dataframe continuously measured gas concentration data measurement metadata another dataframe. Measurements paired metadata based datetime. Extra variables dataframes kept output.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"","code":"flux_match(   raw_conc,   field_record,   f_datetime,   start_col,   end_col,   measurement_length,   fixed_length = deprecated(),   time_diff = 0,   startcrop = 0,   ratio_threshold = deprecated(),   f_conc = deprecated() )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"raw_conc dataframe CO2 concentration measured continuously. contain least datetime column ymd_hms format gas concentration column double. field_record dataframe recording measurement happened . contain least column containing start measurement, column identifying measurements. f_datetime datetime column raw_conc (ymd_hms format) start_col start column field_record (ymd_hms format) end_col end column field_record (ymd_hms format), present (see measurement_length). measurement_length length measurements (seconds) start specified field_record. Use measurement_length measurements length end column present field_record. fixed_length longer required. flux_match detect end_col measurement_length provided. time_diff time difference (seconds) two datasets. added datetime column raw_conc dataset. situations time synchronized correctly. startcrop startcrop longer supported. Please use start_cut flux_fitting instead. ratio_threshold ratio_threshold longer supported. Please use ratio_threshold flux_quality instead. f_conc f_conc longer required","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"dataframe concentration measurements, corresponding datetime, flux ID (f_fluxid), measurements start (f_start) end (f_end).","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"end_col measurement_length provided, end_col ignored. Measurements either length (provide measurement_length), length varies end_col provided.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matching continuously measured fluxes with measurement IDs and meta data — flux_match","text":"","code":"data(co2_df_short, record_short) flux_match(co2_df_short, record_short, datetime, start, measurement_length = 180) #> # A tibble: 1,080 × 11 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:25    NA         NA    439. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:26     7.21      10.9  440.  2.29 156 AN2C 156 ER    #>  3 2022-07-28 23:43:27    NA         NA    441. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:28    NA         NA    441. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:29    NA         NA    442. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:30    NA         NA    443. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:31    NA         NA    443. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:32    NA         NA    444. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:33    NA         NA    446. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:34    NA         NA    446. NA    156 AN2C 156 ER    #> # ℹ 1,070 more rows #> # ℹ 4 more variables: start <dttm>, f_start <dttm>, f_fluxid <fct>, #> #   f_end <dttm>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Using an already existing end column to slice measurements — flux_match_col","title":"Using an already existing end column to slice measurements — flux_match_col","text":"Provides f_end column flux_match","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using an already existing end column to slice measurements — flux_match_col","text":"","code":"flux_match_col(field_record, start_col, end_col, name_field_record)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using an already existing end column to slice measurements — flux_match_col","text":"field_record dataframe recording measurement happened . contain least column containing start measurement, column identifying measurements. start_col start column field_record (ymd_hms format) end_col end columne field_record (ymd_hms format) name_field_record name df (error message)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Using a fixed measurement length to slice the measurements — flux_match_fixed","title":"Using a fixed measurement length to slice the measurements — flux_match_fixed","text":"Provides f_end column flux_match","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using a fixed measurement length to slice the measurements — flux_match_fixed","text":"","code":"flux_match_fixed(field_record, start_col, measurement_length)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_match_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using a fixed measurement length to slice the measurements — flux_match_fixed","text":"field_record dataframe recording measurement happened . contain least column containing start measurement, column identifying measurements. start_col start column field_record (ymd_hms format) measurement_length length measurement (seconds) start specified field_record","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"prepares text to print for flux_plot function — flux_param_exp","title":"prepares text to print for flux_plot function — flux_param_exp","text":"creates df quality flags quality diagnostics print plots produced flux_plot. flux_param_lm fit lm family (linear quadratic) flux_param_exp exponential fit","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepares text to print for flux_plot function — flux_param_exp","text":"","code":"flux_param_exp(slopes_df)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepares text to print for flux_plot function — flux_param_exp","text":"slopes_df slopes_df provided flux_plot","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_kappamax.html","id":null,"dir":"Reference","previous_headings":"","what":"prepares text to print for flux_plot function — flux_param_kappamax","title":"prepares text to print for flux_plot function — flux_param_kappamax","text":"creates df quality flags quality diagnostics print plots produced flux_plot. flux_param_lm fit lm family (linear quadratic) flux_param_exp exponential fit","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_kappamax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepares text to print for flux_plot function — flux_param_kappamax","text":"","code":"flux_param_kappamax(slopes_df)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_kappamax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepares text to print for flux_plot function — flux_param_kappamax","text":"slopes_df slopes_df provided flux_plot","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"prepares text to print in flux_plot — flux_param_lm","title":"prepares text to print in flux_plot — flux_param_lm","text":"creates df quality flags quality diagnostics print plots produced flux_plot. flux_param_lm fit lm family (linear quadratic) flux_param_exp exponential fit","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepares text to print in flux_plot — flux_param_lm","text":"","code":"flux_param_lm(slopes_df)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepares text to print in flux_plot — flux_param_lm","text":"slopes_df slopes_df provided flux_plot","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_qua.html","id":null,"dir":"Reference","previous_headings":"","what":"prepares text to print in flux_plot — flux_param_qua","title":"prepares text to print in flux_plot — flux_param_qua","text":"creates df quality flags quality diagnostics print plots produced flux_plot. flux_param_lm fit lm family (linear quadratic) flux_param_exp exponential fit","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_qua.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepares text to print in flux_plot — flux_param_qua","text":"","code":"flux_param_qua(slopes_df)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_param_qua.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepares text to print in flux_plot — flux_param_qua","text":"slopes_df slopes_df provided flux_plot","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting fluxes for visual evaluation — flux_plot","title":"Plotting fluxes for visual evaluation — flux_plot","text":"Plots fluxes, fit slope facets color code indicating quality flags function takes time run optional workflow, still highly recommended use visually check measurements. Note 'flux_plot' specific fluxible package work best datasets produced following fluxible workflow.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting fluxes for visual evaluation — flux_plot","text":"","code":"flux_plot(   slopes_df,   f_conc = f_conc,   f_datetime = f_datetime,   color_discard = \"#D55E00\",   color_cut = \"#D55E00\",   color_ok = \"#009E73\",   color_zero = \"#CC79A7\",   scale_x_datetime_args = list(date_breaks = \"1 min\", minor_breaks = \"10 sec\",     date_labels = \"%e/%m \\n %H:%M\"),   f_ylim_upper = 800,   f_ylim_lower = 400,   f_plotname = \"\",   f_facetid = \"f_fluxid\",   facet_wrap_args = list(ncol = 4, nrow = 3, scales = \"free\"),   longpdf_args = list(ncol = 4, width = 29.7, ratio = 1),   y_text_position = 500,   print_plot = \"FALSE\",   output = \"print_only\",   ggsave_args = list() )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting fluxes for visual evaluation — flux_plot","text":"slopes_df dataset containing slopes, flags produced flux_quality f_conc column gas concentration f_datetime column datetime data point color_discard color fits discard quality flag color_cut color part flux cut color_ok color fits ok quality flag color_zero color fits zero quality flag scale_x_datetime_args list arguments scale_x_datetime f_ylim_upper y axis upper limit f_ylim_lower y axis lower limit f_plotname filename extracted pdf file; empty, name slopes_df used f_facetid character vector columns use facet IDs. Note united, result unique facet ID measurement. Default f_fluxid facet_wrap_args list arguments facet_wrap, also used facet_wrap_paginate case output = \"pdfpages longpdf_args arguments plotly form list(ncol, width (cm), ratio) y_text_position position text box print_plot logical, TRUE prints plot ggplot object take time depending size dataset output pdfpages, plots saved A4 landscape pdf pages; ggsave, plots can saved ggsave function; print_only (default) prints plot without creating file (independently print_plot TRUE FALSE) ggsave_args list arguments ggsave (case output = \"ggsave\")","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting fluxes for visual evaluation — flux_plot","text":"plots fluxes, raw concentration data points, fit, slope, color code indicating quality flags cuts. plots organized facets according flux ID, text box display quality flag diagnostics measurement. plots returned ggplot object print_plot = TRUE; print_plot = FALSE return anything produce file according output argument.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting fluxes for visual evaluation — flux_plot","text":"output = \"pdfpages\" uses facet_wrap_paginate, tends slow heavy. output = \"longpdf, long single page pdf exported. Default width 29.7 cm (A4 landscape) long needs fit facets. arguments ncol ratio longpdf_args specify number columns ratio facet respectively. method considerably faster pdfpages, bypasses facet_wrap_paginate, bit less aesthetic.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting fluxes for visual evaluation — flux_plot","text":"","code":"data(co2_conc) slopes <- flux_fitting(co2_conc, conc, datetime, fit_type = \"exp_zhao18\") #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds slopes_flag <- flux_quality(slopes, conc) #>  #>  Total number of measurements: 6 #>  #>  ok \t 3 \t 50 % #>  discard \t 2 \t 33 % #>  zero \t 1 \t 17 % #>  force_discard \t 0 \t 0 % #>  start_error \t 0 \t 0 % #>  no_data \t 0 \t 0 % #>  force_ok \t 0 \t 0 % #>  force_zero \t 0 \t 0 % #>  force_lm \t 0 \t 0 % #>  no_slope \t 0 \t 0 % flux_plot(slopes_flag, conc, datetime) #> Plotting in progress"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"plotting fluxes with exponential fit — flux_plot_exp","title":"plotting fluxes with exponential fit — flux_plot_exp","text":"plots fluxes fitted exponential model","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotting fluxes with exponential fit — flux_plot_exp","text":"","code":"flux_plot_exp(slopes_df, f_conc, f_datetime, y_text_position, kappamax)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotting fluxes with exponential fit — flux_plot_exp","text":"slopes_df dataset containing slopes f_conc column gas concentration f_datetime column datetime data point y_text_position position text box kappamax indicating kappamax applied","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"creates the flag column to be used by flux_plot — flux_plot_flag","title":"creates the flag column to be used by flux_plot — flux_plot_flag","text":"creates column quality flags (flux_quality) part rows kept, cut flag rows discarded","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates the flag column to be used by flux_plot — flux_plot_flag","text":"","code":"flux_plot_flag(slopes_df, param_df)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates the flag column to be used by flux_plot — flux_plot_flag","text":"slopes_df provided flux_plot param_df provided flux_param","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"plotting fluxes with linear fit — flux_plot_lin","title":"plotting fluxes with linear fit — flux_plot_lin","text":"plots fluxes fitted linear model","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotting fluxes with linear fit — flux_plot_lin","text":"","code":"flux_plot_lin(slopes_df, f_conc, f_datetime, y_text_position)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotting fluxes with linear fit — flux_plot_lin","text":"slopes_df dataset containing slopes f_conc column gas concentration f_datetime column datetime data point y_text_position position text box","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_longpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"print plots in a single long pdf — flux_plot_longpdf","title":"print plots in a single long pdf — flux_plot_longpdf","text":"print plots single long pdf","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_longpdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print plots in a single long pdf — flux_plot_longpdf","text":"","code":"flux_plot_longpdf(f_plot, f_plotname, nb_fluxid, longpdf_args)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_longpdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print plots in a single long pdf — flux_plot_longpdf","text":"f_plot plot flux_plots f_plotname name plot nb_fluxid number facets longpdf_args arguments plotly form list(ncol, width (cm), ratio)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"print plots in pdf — flux_plot_pdf","title":"print plots in pdf — flux_plot_pdf","text":"print plots pdf","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print plots in pdf — flux_plot_pdf","text":"","code":"flux_plot_pdf(f_plot, f_plotname, facet_wrap_args, nb_fluxid)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print plots in pdf — flux_plot_pdf","text":"f_plot plot flux_plot f_plotname name plot facet_wrap_args list arguments facet_wrap_paginate nb_fluxid number facets","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_quadratic.html","id":null,"dir":"Reference","previous_headings":"","what":"plotting fluxes with a quadratic fit — flux_plot_quadratic","title":"plotting fluxes with a quadratic fit — flux_plot_quadratic","text":"specific part flux_plot quadratic fit","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_quadratic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotting fluxes with a quadratic fit — flux_plot_quadratic","text":"","code":"flux_plot_quadratic(slopes_df, f_conc, f_datetime, y_text_position)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_plot_quadratic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotting fluxes with a quadratic fit — flux_plot_quadratic","text":"slopes_df dataset containing slopes f_conc column gas concentration f_datetime column datetime data point y_text_position position text box","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_print_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing plot — flux_print_plot","title":"Printing plot — flux_print_plot","text":"printing plot flux_plot","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_print_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing plot — flux_print_plot","text":"","code":"flux_print_plot(f_plot, facet_wrap_args)"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_print_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing plot — flux_print_plot","text":"f_plot plot flux_plot facet_wrap_args list arguments facet_wrap","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Assessing the quality of the fits — flux_quality","title":"Assessing the quality of the fits — flux_quality","text":"Indicates slopes provided flux_fitting discarded replaced 0 according quality thresholds set user","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assessing the quality of the fits — flux_quality","text":"","code":"flux_quality(   slopes_df,   f_conc = f_conc,   f_fluxid = f_fluxid,   f_slope = f_slope,   f_time = f_time,   f_start = f_start,   f_end = f_end,   f_fit = f_fit,   f_cut = f_cut,   f_pvalue = f_pvalue,   f_rsquared = f_rsquared,   f_slope_lm = f_slope_lm,   f_fit_lm = f_fit_lm,   f_b = f_b,   force_discard = c(),   force_ok = c(),   force_zero = c(),   force_lm = c(),   force_exp = c(),   ratio_threshold = 0.5,   gfactor_threshold = 10,   fit_type = c(),   ambient_conc = 421,   error = 100,   pvalue_threshold = 0.3,   rsquared_threshold = 0.7,   rmse_threshold = 25,   cor_threshold = 0.5,   b_threshold = 1,   cut_arg = \"cut\",   instr_error = 5,   kappamax = FALSE )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assessing the quality of the fits — flux_quality","text":"slopes_df dataset containing slopes f_conc column containing measured gas concentration (exponential fits) f_fluxid column containing unique IDs flux f_slope column containing slope flux (calculated flux_fitting function) f_time column containing time measurement seconds (exponential fits) f_start column datetime start measurement (cuts) f_end column datetime end measurement (cuts) f_fit column containing modeled data (exponential fits) f_cut column containing cutting information f_pvalue column containing p-value flux (linear quadratic fits) f_rsquared column containing r squared flux (linear quadratic fits) f_slope_lm column containing linear slope flux (calculated flux_fitting function) f_fit_lm column fit linear model. (calculated flux_fitting function) f_b column containing b parameter exponential expression (exponential fits) force_discard vector fluxIDs discarded user's decision force_ok vector fluxIDs user wants keep calculated slope despite bad quality flag force_zero vector fluxIDs replaced zero user's decision force_lm vector fluxIDs linear slope used user's decision force_exp vector fluxIDs exponential slope used user's decision (kappamax method) ratio_threshold ratio gas concentration data points length measurement (seconds) measurement considered enough data points considered calculations gfactor_threshold threshold g-factor. Defines window opposite outside flux flagged discard (exponential quadratic fits). fit_type model fitted data, linear, quadratic exponential. automatically filled slopes_df produced using flux_fitting ambient_conc ambient gas concentration ppm site measurement (used detect measurement started polluted setup) error error setup, defines window outside starting values indicate polluted setup pvalue_threshold threshold p-value change gas concentration time considered significant (linear quadratic fits) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit (linear quadratic fits) rmse_threshold threshold RMSE flux fit considered unsatisfactory (exponential fits) cor_threshold threshold correlation coefficient gas concentration time correlation considered significant (exponential fits) b_threshold threshold b parameter. Defines window opposite inside fit considered good enough (exponential fits) cut_arg argument defining data point cut instr_error error instrument, unit gas concentration kappamax logical. TRUE kappamax method applied.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assessing the quality of the fits — flux_quality","text":"dataframe added columns quality flags (f_quality_flag), slope corrected according quality flags (f_slope_corr), columns present input. also print summary quality flags. summary can also exported dataframe using flux_flag_count","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assessing the quality of the fits — flux_quality","text":"kappamax method (Hüppi et al., 2018) selects linear slope |b| > kappamax, kappamax = |f_slope_lm / instr_error|. original kappamax method applied HMR model (Pedersen et al., 2010; Hutchinson Mosier, 1981), can applied exponential fit.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assessing the quality of the fits — flux_quality","text":"Pedersen, .R., Petersen, S.O., Schelde, K., 2010. comprehensive approach soil-atmosphere trace-gas flux estimation static chambers. European Journal Soil Science 61, 888–902. https://doi.org/10.1111/j.1365-2389.2010.01291.x Hüppi, R., Felber, R., Krauss, M., Six, J., Leifeld, J., Fuß, R., 2018. Restricting nonlinearity parameter soil greenhouse gas flux calculation reliable flux estimates. PLOS ONE 13, e0200876. https://doi.org/10.1371/journal.pone.0200876 Hutchinson, G.L., Mosier, .R., 1981. Improved Soil Cover Method Field Measurement Nitrous Oxide Fluxes. Soil Science Society America Journal 45, 311–316.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assessing the quality of the fits — flux_quality","text":"","code":"data(co2_conc) slopes <- flux_fitting(co2_conc, conc, datetime, fit_type = \"exp_zhao18\") #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds flux_quality(slopes, conc) #>  #>  Total number of measurements: 6 #>  #>  ok \t 3 \t 50 % #>  discard \t 2 \t 33 % #>  zero \t 1 \t 17 % #>  force_discard \t 0 \t 0 % #>  start_error \t 0 \t 0 % #>  no_data \t 0 \t 0 % #>  force_ok \t 0 \t 0 % #>  force_zero \t 0 \t 0 % #>  force_lm \t 0 \t 0 % #>  no_slope \t 0 \t 0 % #> # A tibble: 1,251 × 36 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA    453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 29 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, f_cut <fct>, #> #   f_rsquared_lm <dbl>, f_adj_rsquared_lm <dbl>, f_slope_lm <dbl>, #> #   f_intercept_lm <dbl>, f_pvalue_lm <dbl>, f_fit_lm <dbl>, f_Cz <dbl>, #> #   f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, f_slope <dbl>, f_fit <dbl>, #> #   f_fit_slope <dbl>, f_start_z <dttm>, f_min_slope <dbl>, f_cor_coef <dbl>, …"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"quality assessment for the slopes estimated by flux_fitting — flux_quality_exp","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_exp","text":"indicates fluxes discarded replaced 0 according parameters set user. flux_quality_lm model lm family. flux_quality_exp exponential model.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_exp","text":"","code":"flux_quality_exp(   slopes_df,   f_conc,   f_fluxid,   f_slope,   f_time,   f_fit,   f_slope_lm,   f_b,   force_discard,   force_ok,   force_zero,   force_lm,   gfactor_threshold,   rmse_threshold,   cor_threshold,   b_threshold,   name_df )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_exp","text":"slopes_df dataset containing slopes, fluxID, parameters exponential expression f_conc column gas concentration f_fluxid column ID measurement f_slope column containing slope flux (calculated flux_fitting function) f_time column containing time measurement seconds f_fit column containing modeled data f_slope_lm column containing linear slope flux (calculated flux_fitting function) f_b column containing b parameter exponential expression force_discard vector fluxIDs discarded user's decision force_ok vector fluxIDs user wants keep calculated slope despite bad quality flag force_zero vector fluxIDs replaced zero user's decision force_lm vector fluxIDs linear slope used user's decision gfactor_threshold threshold g-factor. Defines window opposite outside flux flagged discard. rmse_threshold threshold RMSE flux fit considered unsatisfactory cor_threshold threshold correlation coefficient gas concentration time correlation considered non significant b_threshold threshold b parameter. Defines window opposite inside fit considered good enough. name_df name slopes_df","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_exp","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_kappamax.html","id":null,"dir":"Reference","previous_headings":"","what":"selecting linear slope with kappamax method — flux_quality_kappamax","title":"selecting linear slope with kappamax method — flux_quality_kappamax","text":"selecting linear slope kappamax method","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_kappamax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"selecting linear slope with kappamax method — flux_quality_kappamax","text":"","code":"flux_quality_kappamax(   slopes_df,   f_slope,   f_fit,   f_fluxid,   f_slope_lm,   f_fit_lm,   f_b,   force_exp,   fit_type,   instr_error,   name_df )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_kappamax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"selecting linear slope with kappamax method — flux_quality_kappamax","text":"slopes_df dataset containing slopes f_slope column containing slope flux (calculated flux_fitting function) f_fit column containing modeled data (exponential fits) f_fluxid column ID measurement f_slope_lm column containing linear slope flux f_fit_lm column fit linear model. f_b column containing b parameter exponential expression force_exp vector fluxIDs exponential slope used user's decision (kappamax method) fit_type model fitted data, linear, quadratic exponential. automatically filled slopes_df produced using flux_fitting instr_error error instrument, unit gas concentration name_df name slopes_df","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"quality assessment for the slopes estimated by flux_fitting — flux_quality_lm","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_lm","text":"indicates fluxes discarded replaced 0 according parameters set user. flux_quality_lm model lm family. flux_quality_exp exponential model.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_lm","text":"","code":"flux_quality_lm(   slopes_df,   f_fluxid,   f_slope,   f_pvalue,   f_rsquared,   force_discard,   force_ok,   force_zero,   pvalue_threshold,   rsquared_threshold,   name_df )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_lm","text":"slopes_df dataset containing slopes, fluxID, p.value r.squared f_fluxid column ID measurement f_slope column containing slope flux (calculated flux_fitting function) f_pvalue column containing p-value flux f_rsquared column containing r squared used quality assessment force_discard vector fluxIDs discarded user's decision force_ok vector fluxIDs user wants keep calculated slope despite bad quality flag force_zero vector fluxIDs replaced zero user's decision pvalue_threshold threshold p-value change gas concentration time considered significant (user decided) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit name_df name slopes_df (used error message)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_lm","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_qua.html","id":null,"dir":"Reference","previous_headings":"","what":"quality assessment for the slopes estimated by flux_fitting — flux_quality_qua","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_qua","text":"indicates fluxes discarded replaced 0 according parameters set user. flux_quality_lm model lm family. flux_quality_exp exponential model.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_qua.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_qua","text":"","code":"flux_quality_qua(   slopes_df,   f_fluxid,   f_slope,   f_pvalue,   f_rsquared,   f_slope_lm,   force_discard,   force_ok,   force_zero,   force_lm,   gfactor_threshold,   pvalue_threshold,   rsquared_threshold,   name_df )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_qua.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_qua","text":"slopes_df dataset containing slopes, fluxID, p.value r.squared f_fluxid column ID measurement f_slope column containing slope flux (calculated flux_fitting function) f_pvalue column containing p-value flux f_rsquared column containing r squared used quality assessment f_slope_lm column containing linear slope flux (calculated flux_fitting function) force_discard vector fluxIDs discarded user's decision force_ok vector fluxIDs user wants keep calculated slope despite bad quality flag force_zero vector fluxIDs replaced zero user's decision force_lm vector fluxIDs linear slope used user's decision gfactor_threshold threshold g-factor. Defines window opposite outside flux flagged discard. pvalue_threshold threshold p-value change gas concentration time considered significant (user decided) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit name_df name slopes_df (used error message)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_quality_qua.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quality assessment for the slopes estimated by flux_fitting — flux_quality_qua","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit conversion coefficient for fluxes — flux_units","title":"Unit conversion coefficient for fluxes — flux_units","text":"calculates conversion coefficient flux_calc","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit conversion coefficient for fluxes — flux_units","text":"","code":"flux_units(   flux_units,   conc_units,   conc_units_list = c(\"ppm\", \"ppb\", \"ppt\"),   amount_units = c(\"mol\", \"mmol\", \"umol\", \"nmol\", \"pmol\"),   surface_units = c(\"m2\", \"dm2\", \"cm2\"),   time_units = c(\"d\", \"h\", \"mn\", \"s\") )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit conversion coefficient for fluxes — flux_units","text":"flux_units desired units calculated fluxes. form amount/time/surface. Amount can mol, mmol, umol, nmol pmol. Time can d (day), h (hour), mn (minute) s (seconds). Surface can m2, dm2 cm2. conc_units units gas concentration ppm, ppb ppt. conc_units_list list possible units gas concentration. amount_units list possible units amount. surface_units list possible units surface. time_units list possible units time.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit conversion coefficient for fluxes — flux_units","text":"single numerical multiply flux values convert units.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unit conversion coefficient for fluxes — flux_units","text":"conversion done umol/s/m2 gas concentration measured ppm.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/flux_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unit conversion coefficient for fluxes — flux_units","text":"","code":"flux_units(\"mol/m2/mn\", \"ppm\") #> [1] 6e-05"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/fluxible-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fluxible: Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup — fluxible-package","title":"fluxible: Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup — fluxible-package","text":"Processes raw data closed loop flux chamber (tent) setups ecosystem gas fluxes usable analysis. goes data frame gas concentration time (can contain several measurements) meta data file indicating measurement done , data frame ecosystem gas fluxes including quality diagnostics. Functions provided include different models (exponential described Zhao et al (2018) doi:10.1016/j.agrformet.2018.08.022 , quadratic linear) estimate fluxes raw data, quality assessment, plotting visual check calculation fluxes based setup specific parameters (chamber size, plot area, ...).","code":""},{"path":[]},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/fluxible-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fluxible: Ecosystem Gas Fluxes Calculations for Closed Loop Chamber Setup — fluxible-package","text":"Maintainer: Joseph Gaudard joseph.gaudard@pm.(ORCID) Authors: Richard James Telford richard.telford@uib.(ORCID)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/raw_twogases.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 and CH4 concentration — raw_twogases","title":"CO2 and CH4 concentration — raw_twogases","text":"CO2 CH4 measured simultaneously","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/raw_twogases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 and CH4 concentration — raw_twogases","text":"","code":"raw_twogases"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/raw_twogases.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 and CH4 concentration — raw_twogases","text":"tibble 21681 rows 4 variables co2_conc CO2 concentration ppm ch4_conc CH4 concentration ppb datetime Datetime datapoint temp_air Air temperature inside chamber Celsius","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/raw_twogases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 and CH4 concentration — raw_twogases","text":"","code":"raw_twogases #> # A tibble: 21,681 × 4 #>    co2_conc ch4_conc datetime            temp_air #>       <dbl>    <dbl> <dttm>                 <dbl> #>  1    1616.    1038. 2024-06-18 10:00:00     14.4 #>  2    1616.    1038. 2024-06-18 10:00:01     NA   #>  3    1616.    1038. 2024-06-18 10:00:02     14.4 #>  4    1616.    1038. 2024-06-18 10:00:03     NA   #>  5    1616.    1038. 2024-06-18 10:00:04     14.3 #>  6    1616.    1038. 2024-06-18 10:00:05     NA   #>  7    1616.    1038. 2024-06-18 10:00:06     14.3 #>  8    1616.    1038. 2024-06-18 10:00:07     NA   #>  9    1616.    1038. 2024-06-18 10:00:08     14.3 #> 10    1616.    1038. 2024-06-18 10:00:09     NA   #> # ℹ 21,671 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_liahovden.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurements meta data at Liahovden — record_liahovden","title":"Measurements meta data at Liahovden — record_liahovden","text":"Measurements meta data recorded field site Liahovden","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_liahovden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurements meta data at Liahovden — record_liahovden","text":"","code":"record_liahovden"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_liahovden.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Measurements meta data at Liahovden — record_liahovden","text":"tibble 138 rows 3 variables turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). round Round measurement. start Datetime measurement started.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_liahovden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measurements meta data at Liahovden — record_liahovden","text":"","code":"record_liahovden #> # A tibble: 138 × 4 #>    turfID     type  round start               #>    <chr>      <chr> <dbl> <dttm>              #>  1 4 AN1C 4   NEE       1 2022-07-27 05:37:30 #>  2 4 AN1C 4   ER        1 2022-07-27 05:42:00 #>  3 27 AN3C 27 NEE       1 2022-07-27 05:46:55 #>  4 27 AN3C 27 ER        1 2022-07-27 05:50:45 #>  5 77 AN2C 77 NEE       1 2022-07-27 05:57:30 #>  6 77 AN2C 77 ER        1 2022-07-27 06:02:00 #>  7 4 AN1C 4   NEE       2 2022-07-27 06:32:00 #>  8 4 AN1C 4   ER        2 2022-07-27 06:36:30 #>  9 27 AN3C 27 NEE       2 2022-07-27 06:41:15 #> 10 27 AN3C 27 ER        2 2022-07-27 06:45:50 #> # ℹ 128 more rows"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_short.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurements meta data — record_short","title":"Measurements meta data — record_short","text":"Measurements meta data recorded field","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurements meta data — record_short","text":"","code":"record_short"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Measurements meta data — record_short","text":"tibble 6 rows 3 variables turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/record_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measurements meta data — record_short","text":"","code":"record_short #> # A tibble: 6 × 3 #>   turfID       type  start               #>   <chr>        <chr> <dttm>              #> 1 156 AN2C 156 ER    2022-07-28 23:43:25 #> 2 74 WN2C 155  NEE   2022-07-28 23:47:12 #> 3 74 WN2C 155  ER    2022-07-28 23:52:00 #> 4 109 AN3C 109 NEE   2022-07-28 23:59:22 #> 5 109 AN3C 109 ER    2022-07-29 00:03:00 #> 6 29 WN3C 106  NEE   2022-07-29 00:06:25"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/slopes0_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0_temp","title":"Slopes for each flux — slopes0_temp","text":"Slopes C(t) flux air temperature various units.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/slopes0_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0_temp","text":"","code":"slopes0_temp"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/slopes0_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0_temp","text":"tibble 1251 rows 29 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosynthetically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). f_start Datetime measurement started. f_end Datetime measurement ended. f_fluxid Unique ID flux. f_ratio Ratio number datapoints length measurement seconds. f_flag_match Flags flux_match. f_time Time variable flux seconds. f_cut Indicating measurement kept (keep) discarded (cut). f_Cz Cz parameter C(t) function. f_Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. f_a parameter C(t) function, calculated optim() a_est starting point. f_b b parameter C(t) function, calculated optim() b_est starting point. f_tz tz parameter C(t) function, calculated optim() tz_est starting point. f_slope Slope C(t) tz f_fit C(t), modeled CO2 concentration function time. f_fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. f_start_z Datetime format tz f_cor_coef Correlation coeffecient concentration time. f_RMSE RMSE fit. f_quality_flag Quality flags according flux_quality. f_slope_corr Slope advised quality flags. temp_fahr Air temperature inside flux chamber Fahrenheit averaged flux measurement. temp_kelvin Air temperature inside flux chamber Kelvin averaged flux measurement.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/slopes0_temp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0_temp","text":"","code":"slopes0_temp #> # A tibble: 1,251 × 29 #>    datetime            temp_air temp_soil  conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA    447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9  447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA    448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA    449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA    449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA    450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA    451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA    451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA    453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA    453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxid <fct>, #> #   f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, f_cut <fct>, f_Cz <dbl>, #> #   f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, f_slope <dbl>, f_fit <dbl>, #> #   f_fit_slope <dbl>, f_start_z <dttm>, f_cor_coef <dbl>, f_RMSE <dbl>, #> #   f_quality_flag <chr>, f_slope_corr <dbl>, temp_fahr <dbl>, #> #   temp_kelvin <dbl>"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":null,"dir":"Reference","previous_headings":"","what":"From raw gas concentration over time to clean fluxes — stupeflux","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"Wrapper function Fluxible workflow. recommand using step--step workflow control process.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"","code":"stupeflux(   raw_conc,   field_record,   f_datetime,   start_col,   end_col,   f_conc,   setup_volume,   measurement_length,   fit_type,   temp_air_col,   atm_pressure,   plot_area,   conc_unit,   flux_unit,   cols_keep = c(),   cols_ave = c(),   cols_sum = c(),   cols_med = c(),   ratio_threshold = 0.5,   time_diff = 0,   start_cut = 0,   end_cut = 0,   cz_window = 15,   b_window = 10,   a_window = 10,   roll_width = 15,   t_zero = 0,   force_discard = c(),   force_ok = c(),   force_zero = c(),   ambient_conc = 421,   error = 100,   pvalue_threshold = 0.3,   rsquared_threshold = 0.7,   rmse_threshold = 25,   cor_threshold = 0.5,   b_threshold = 1,   temp_air_unit = \"celsius\",   cut = TRUE,   slope_correction = TRUE )"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"raw_conc dataframe CO2 concentration measured continuously. contain least datetime column ymd_hms format gas concentration column double. field_record dataframe recording measurement happened . contain least column containing start measurement, column identifying measurements. f_datetime datetime column raw_conc (dmy_hms format) start_col start column field_record (dmy_hms format) end_col end columne field_record (ymd_hms format) f_conc concentration column raw_conc setup_volume volume flux chamber instrument together L, can also column case variable measurement_length length measurement (seconds) start specified field_record fit_type exp_zhao18, exp_tz, exp_hm, quadratic linear. exp_zhao18 using exponential model C(t) = C_m + (t - t_z) + (C_z - C_m) exp(-b (t - t_z)) Zhao et al (2018). expt_tz modified version allows user fix t_zero: C(t) = C_m + * t + (C_z - C_m) exp(-b * t) exp_hm using HM model (Pedersen et al., 2010; Hutchinson Mosier, 1981) C(t) = C_m + (C_z - C_m) exp(-b * t) temp_air_col column containing air temperature used calculate fluxes. averaged NA removed. atm_pressure atmospheric pressure, can constant (numerical) variable (column name) plot_area area plot m^2, can also column case variable conc_unit unit concentration gas measured ppm ppb flux_unit unit calculated flux mmol outputs fluxes mmol * m-2 * h-1; micromol outputs fluxes micromol * m-2 * h-1 cols_keep columns keep input output. columns need unique values flux, distinct() applied. cols_ave columns values averaged flux output. Note NA removed mean calculation. cols_sum columns values sum provided flux output. Note NA removed sum calculation. cols_med columns values median provided flux output. Note NA removed median calculation. ratio_threshold ratio gas concentration data points length measurement (seconds) measurement considered enough data points considered calculations time_diff time difference (seconds) two datasets. added datetime column raw_conc dataset. situations time synchronized correctly. start_cut time discard start measurements (seconds) end_cut time discard end measurements (seconds) cz_window window used calculate Cz, beginning cut window (exp_zhao18 exp_tz fits) b_window window estimate b. interval tz assumed model fits data perfectly (exp_zhao18 exp_tz fits) a_window window end flux estimate (exp_zhao18 exp_tz fits) roll_width width rolling mean CO2 looking tz, ideally cz_window (exp_zhao18 exp_tz fits) t_zero time slope calculated (quadratic exp_tz fits) force_discard vector fluxIDs discarded user's decision force_ok vector fluxIDs user wants keep calculated slope despite bad quality flag force_zero vector fluxIDs replaced zero user's decision ambient_conc ambient gas concentration ppm site measurement (used detect measurement started polluted setup) error error setup, defines window outside starting values indicate polluted setup pvalue_threshold threshold p-value change gas concentration time considered significant (linear quadratic fit) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit (linear quadratic fit) rmse_threshold threshold RMSE flux fit considered unsatisfactory (exp_zhao18 exp_tz fits) cor_threshold threshold correlation coefficient gas concentration time correlation considered significant (exp_zhao18 exp_tz fits) b_threshold threshold b parameter. Defines window opposite inside fit considered good enough (exp_zhao18 exp_tz fits) temp_air_unit units air temperature measured. either celsius (default), fahrenheit kelvin. cut 'TRUE' (default), measurements cut according 'f_cut' calculating fluxes. influence flux since slope provided flux_fitting, influence values columns cols_ave. slope_correction logical. TRUE, flux calculated slope corrected according recommandations quality flags.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"dataframe containing flux IDs, datetime measurements' starts, fluxes mmol * m-2 * h-1 micromol * m-2 * h-1 (f_flux) according flux_unit, temperature average flux Kelvin (f_temp_ave), total volume setup measurement (f_volume_setup), model used flux_fitting, column specified cols_keep, column specified cols_ave value averaged measurement cuts discarding NA.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"Pedersen, .R., Petersen, S.O., Schelde, K., 2010. comprehensive approach soil-atmosphere trace-gas flux estimation static chambers. European Journal Soil Science 61, 888–902. https://doi.org/10.1111/j.1365-2389.2010.01291.x Hutchinson, G.L., Mosier, .R., 1981. Improved Soil Cover Method Field Measurement Nitrous Oxide Fluxes. Soil Science Society America Journal 45, 311–316. https://doi.org/10.2136/sssaj1981.03615995004500020017x Zhao, P., Hammerle, ., Zeeman, M., Wohlfahrt, G., 2018. calculation daytime CO2 fluxes measured automated closed transparent chambers. Agricultural Forest Meteorology 263, 267–275. https://doi.org/10.1016/j.agrformet.2018.08.022","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/stupeflux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From raw gas concentration over time to clean fluxes — stupeflux","text":"","code":"data(co2_df_short) data(record_short) stupeflux( raw_conc = co2_df_short, field_record = record_short, f_datetime = datetime, start_col = start, f_conc = conc, measurement_length = 180, fit_type = \"exp_zhao18\", temp_air_col = temp_air, conc_unit = \"ppm\", flux_unit = \"mmol\", setup_volume = 24.575, atm_pressure = 1, plot_area = 0.0625 ) #> Cutting measurements... #> Estimating starting parameters for optimization... #> Optimizing fitting parameters... #> Calculating fits and slopes... #> Done. #>  #>  Total number of measurements: 6 #>  #>  ok \t 5 \t 83 % #>  discard \t 1 \t 17 % #>  zero \t 0 \t 0 % #>  force_discard \t 0 \t 0 % #>  start_error \t 0 \t 0 % #>  no_data \t 0 \t 0 % #>  force_ok \t 0 \t 0 % #>  force_zero \t 0 \t 0 % #>  force_lm \t 0 \t 0 % #>  no_slope \t 0 \t 0 % #> Warning: The `flux_unit` argument of `flux_calc()` should be in the form #> amount/surface/time as of fluxible 1.2.4. #> ℹ The deprecated feature was likely used in the fluxible package. #>   Please report the issue at #>   <https://github.com/Plant-Functional-Trait-Course/fluxible/issues>. #> Cutting data according to 'keep_arg'... #> Averaging air temperature for each flux... #> Calculating fluxes... #> R constant set to 0.082057 #> Concentration was measured in ppm #> Fluxes are in mmol/m2/h #> # A tibble: 6 × 6 #>   f_fluxid f_slope_corr f_temp_air_ave datetime            f_flux f_model    #>   <fct>           <dbl>          <dbl> <dttm>               <dbl> <chr>      #> 1 1               0.817           7.28 2022-07-28 23:43:25   50.3 exp_zhao18 #> 2 2               0.508           7.37 2022-07-28 23:47:12   31.3 exp_zhao18 #> 3 3               0.328           7.44 2022-07-28 23:52:00   20.2 exp_zhao18 #> 4 4               0.703           7.78 2022-07-28 23:59:22   43.2 exp_zhao18 #> 5 5              NA               7.69 2022-07-29 00:03:00   NA   exp_zhao18 #> 6 6               0.510           7.74 2022-07-29 00:06:25   31.3 exp_zhao18"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/twogases_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Two gases field record — twogases_record","title":"Two gases field record — twogases_record","text":"Two gases field record","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/twogases_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two gases field record — twogases_record","text":"","code":"twogases_record"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/twogases_record.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Two gases field record — twogases_record","text":"tibble 12 rows 1 variable start Start datetime flux measurement","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/reference/twogases_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two gases field record — twogases_record","text":"","code":"twogases_record #> # A tibble: 12 × 1 #>    start               #>    <dttm>              #>  1 2024-06-18 10:04:27 #>  2 2024-06-18 11:12:42 #>  3 2024-06-18 11:16:31 #>  4 2024-06-18 11:38:46 #>  5 2024-06-18 11:42:40 #>  6 2024-06-18 12:59:33 #>  7 2024-06-18 13:37:35 #>  8 2024-06-18 14:35:32 #>  9 2024-06-18 14:39:32 #> 10 2024-06-18 15:02:59 #> 11 2024-06-18 15:07:28 #> 12 2024-06-18 16:18:36"},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-129","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.9","title":"fluxible 1.2.9","text":"flux_plot: output = \"longpdf\" exports single page pdf (default width 29.7 cm long needed). method considerably faster pdfpages, bypasses facet_wrap_paginate, bit less aesthetic.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-128","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.8","title":"fluxible 1.2.8","text":"flux_plot: f_facetid argument allows display information facet IDs plotting","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-127","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.7","title":"fluxible 1.2.7","text":"flux_match: fixed_length deprecated. flux_match detect whether end_col measurement_length provided.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-126","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.6","title":"fluxible 1.2.6","text":"CRAN release: 2025-06-24 flux_calc: gas concentration unit can ppm, ppb ppt. conversion coefficient integrated flux_units","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-125","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.5","title":"fluxible 1.2.5","text":"flux_calc: atm_pressure averaged like temp_air_col variable one value per flux measurement","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-124","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.4","title":"fluxible 1.2.4","text":"flux_units: new function returning conversion factor transform fluxes desired unit flux_calc: flux_unit argument now takes units form amount/surface/time","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-123","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.3","title":"fluxible 1.2.3","text":"flux_lrc: new function standardize CO2 fluxes PAR values","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-122","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.2","title":"fluxible 1.2.2","text":"CRAN release: 2025-06-05 chamber_volume tube_volume deprecated, use setup_volume instead cols_nest = \"\" allows nest columns, keep raw data ratio_threshold deprecated, use ratio_threshold flux_quality() instead f_conc longer needed, deprecated flux_quality: ratio_threshold default value now 0.5, 0 previously, make sense","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-121","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.1","title":"fluxible 1.2.1","text":"flux_quality: new no_slope quality flag model fitted data. flux_match: startcrop argument deprecated flux_fitting(start_cut) similar function.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-120","dir":"Changelog","previous_headings":"","what":"fluxible 1.2.0","title":"fluxible 1.2.0","text":"variables cols_ave, cols_med cols_cum gets suffix added possible provide variable several arguments. cols_nest: new argument variable keep nested tibble flux calculation.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-112","dir":"Changelog","previous_headings":"","what":"fluxible 1.1.2","title":"fluxible 1.1.2","text":"CRAN release: 2025-05-22 flux_flag_count: need cut argument anymore, can also used calculating fluxes provide table number measurements quality flag.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-111","dir":"Changelog","previous_headings":"","what":"fluxible 1.1.1","title":"fluxible 1.1.1","text":"CRAN release: 2025-05-13 flux_gep: deprecated, renamed flux_gpp (exactly ). Fixed equations documentation.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-110","dir":"Changelog","previous_headings":"","what":"fluxible 1.1.0","title":"fluxible 1.1.0","text":"CRAN release: 2025-04-22","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-105","dir":"Changelog","previous_headings":"","what":"fluxible 1.0.5","title":"fluxible 1.0.5","text":"flux_quality: fluxes bad fit now flagged zero linear slope minimal detectable slope (calculated 2×instrument error/length flux2 \\times \\text{instrument error} / \\text{length flux}) instead discard.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-104","dir":"Changelog","previous_headings":"","what":"fluxible 1.0.4","title":"fluxible 1.0.4","text":"exp_hm use HM model (Pedersen et al., 2010; Hutchinson Mosier, 1981). returns linear slope besides chosen method. kappamax = TRUE apply kappamax method (Hüppi et al., 2018) exponential fits. g-factor output shows ratio slope linear slope. force_linear force_exp force use linear exponential slope (kappamax method). flux_match: option feed column end time instead fixed measurement length, case fluxes length cols_sum columns values summed flux. cols_med columns median provided flux.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-103","dir":"Changelog","previous_headings":"","what":"fluxible 1.0.3","title":"fluxible 1.0.3","text":"stupeflux: wrap function directly process raw gas concentration data ecosystem gas fluxes. flux_fitting: optim returns non-finite values, slope NA function crash anymore. flux_fitting: new model exp_tz. exp_zhao18 except user defines t_zero.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-102","dir":"Changelog","previous_headings":"","what":"fluxible 1.0.2","title":"fluxible 1.0.2","text":"flux_gep: fluxes presents dataset neither NEE ER (soilR, LRC ) lost anymore.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-101","dir":"Changelog","previous_headings":"","what":"fluxible 1.0.1","title":"fluxible 1.0.1","text":"flux_quality: added force_zero argument force flux replaced zero.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-013","dir":"Changelog","previous_headings":"","what":"fluxible 0.1.3","title":"fluxible 0.1.3","text":"Error corrected flux_gep: columns cols_keep argument filled GEP flux values NEE flux, NA missing, values ER fluxes.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-012","dir":"Changelog","previous_headings":"","what":"fluxible 0.1.2","title":"fluxible 0.1.2","text":"flux_gep allows keep columns without naming . Order columns output flux_match logical (f_start f_end…).","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-011","dir":"Changelog","previous_headings":"","what":"fluxible 0.1.1","title":"fluxible 0.1.1","text":"Vignettes temporarily back Rmd quarto_render bug fixed (https://github.com/r-lib/pkgdown/issues/2830)","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-010","dir":"Changelog","previous_headings":"","what":"fluxible 0.1.0","title":"fluxible 0.1.0","text":"Added vignette describing prepare data fluxible. flux_plot now adds vertical line showing t_zero . ‘flux_plot’: scale_x_datetime arguments now past list. Functions now recycle user’s column names instead renaming . Columns created fluxible functions suffix ‘f_’.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-006","dir":"Changelog","previous_headings":"","what":"fluxible 0.0.6","title":"fluxible 0.0.6","text":"Correction flux_quality: ‘zero’ ‘discard’ flags inverted using linear fit.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-005","dir":"Changelog","previous_headings":"","what":"fluxible 0.0.5","title":"fluxible 0.0.5","text":"flux_plot: fixed blurriness quality flags.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-004","dir":"Changelog","previous_headings":"","what":"fluxible 0.0.4","title":"fluxible 0.0.4","text":"flux_gep function calculate GEP.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-003","dir":"Changelog","previous_headings":"","what":"fluxible 0.0.3","title":"fluxible 0.0.3","text":"plots colored (colors code raw concentration data points fit slope black). Legend line types plots. Plot subtitles indicating fit type.","code":""},{"path":"https://plant-functional-trait-course.github.io/fluxible/index.html/news/index.html","id":"fluxible-002","dir":"Changelog","previous_headings":"","what":"fluxible 0.0.2","title":"fluxible 0.0.2","text":"flux_calc allows choose units. flux_calc alows plot area variable. flux_fitting exponential model works concentration data missing middle measurement.","code":""}]
